<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CÃ©dric Champeau's blog</title>
    <link>https://melix.github.io/blog/</link>
    <atom:link href="https://melix.github.io/blog//feed.xml" rel="self" type="application/rss+xml" />
    <description>JBake Bootstrap Template</description>
    <language>en-gb</language>
    <pubDate>Wed, 14 Oct 2020 10:38:20 +0200</pubDate>
    <lastBuildDate>Wed, 14 Oct 2020 10:38:20 +0200</lastBuildDate>

    <item>
      <title>Dependabot and automated dependency upgrades</title>
      <link>https://melix.github.io/blog/2020/10/about-dependabot.html</link>
      <pubDate>Sun, 11 Oct 2020 00:00:00 +0200</pubDate>
      <guid isPermaLink="false">2020/10/about-dependabot.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://dependabot.com/&quot;&gt;Dependabot&lt;/a&gt; starts with a great idea: the state of our industry, in terms of dependency management, is sad.
In particular, maintaining dependencies up-to-date is difficult and while some solutions exist, the vast majority of projects are out of date.
This isn&amp;#8217;t a big deal for bugfixes and feature updates, but it is clearly a problem for security issues.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Therefore, any kind of automation to make the situation better is a good idea.
I am in deep empathy with people working in this area: this is a difficult problem and there are no perfect solutions: as an example, in order to improve security of builds and reduce the risks of attacks via the toolchain, &lt;a href=&quot;https://docs.gradle.org/current/userguide/dependency_verification.html&quot;&gt;Gradle introduced dependency verification&lt;/a&gt; as a first-class citizen.
We deeply care about security and definitely support any attempt to make things better in this area.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The genius idea about &lt;a href=&quot;https://dependabot.com/&quot;&gt;Dependabot&lt;/a&gt; is that it does it at scale &lt;strong&gt;and submits pull requests&lt;/strong&gt; that you just have to review and merge if everything goes ok.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The best example in the Java ecosystem happened yesterday: the JUnit team fixed a &lt;a href=&quot;https://github.com/junit-team/junit4/security/advisories/GHSA-269g-pwp5-87pp&quot;&gt;security vulnerability in JUnit 4.13&lt;/a&gt;.
At first, you might wonder what kind of security problems you can have with a testing framework, which, by definition, just like a build tool, runs any arbitrary code on your machine.
The reality is that most people are unaffected by this problem: it would only be the case if your tests write sensitive data (like credentials) in a shared environment, or that you somehow expose whatever is written in the test directory to the outside world.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nevertheless, because it&amp;#8217;s a CVE, Dependabot submitted automated pull-requests to all projects using JUnit 4 and &lt;a href=&quot;https://github.com/search?o=desc&amp;amp;q=Bump+junit+from+to+4.13.1+GHSA-269g-pwp5-87pp&amp;amp;s=&amp;amp;type=Issues&quot;&gt;Dependarmaggedon happened&lt;/a&gt;: tens of thousands of pull requests.
This might sound cool, a security fix needs to be fixed, but I find this noisy, and in the end dangerous.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here&amp;#8217;s why.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&quot;_automatic_detection&quot; class=&quot;sect0&quot;&gt;Automatic detection&lt;/h1&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://dependabot.com/&quot;&gt;Dependabot&lt;/a&gt; is as good as an automated tool can be.
I mean that its &lt;em&gt;implementation&lt;/em&gt;, at least in the Java and JVM ecosystem in general, is too simplistic and that it&amp;#8217;s inherently &lt;strong&gt;wrong&lt;/strong&gt;.
I don&amp;#8217;t have the expertise to tell if it&amp;#8217;s different in the other supported ecosystems (Go) but I suspect a lot of the problems I&amp;#8217;m going to describe here exist also in those ecosystems.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In practice, Dependabot is nothing more than a search and replace engine: it looks into some particular files that it knows about (think &lt;code&gt;pom.xml&lt;/code&gt;), looks for some patterns, then tries to identify dependency coordinates and eventually replaces them. I&amp;#8217;m simplifying a bit, because it does some interpretation of the versions it finds, for example to match version ranges, but that&amp;#8217;s roughtly how it works.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example, it will identify this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint xml language-xml&quot;&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
   &amp;lt;group&amp;gt;junit&amp;lt;/group&amp;gt;
   &amp;lt;name&amp;gt;junit&amp;lt;/version&amp;gt;
   &amp;lt;version&amp;gt;4.13&amp;lt;/version&amp;gt;
   &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;and it will replace the &lt;code&gt;4.13&lt;/code&gt; with &lt;code&gt;4.13.1&lt;/code&gt;, then submit a PR for you to review. WIN!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Yes, and no. Because this is extremely easy to defeat.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;First, as I said, it only looks for known files. For Maven, it&amp;#8217;s pretty simple, there&amp;#8217;s only one place to look for: &lt;code&gt;pom.xml&lt;/code&gt; files, but for other build tools, like Gradle, Ivy, Ant, Bazel, Pants, &amp;#8230; that&amp;#8217;s not the case: dependencies can be declared in different files, not all named the same. Dependency versions can be separate (in properties files) or inherited from context (parent POMs, platforms, &amp;#8230;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A more complete strategy is to look for patterns too, like &lt;code&gt;*.gradle&lt;/code&gt;, but then, they also miss the &lt;code&gt;*.gradle.kts&lt;/code&gt; files (they do), or the plugins which can contribute dependencies.
In short: it&amp;#8217;s a whack-a-mole game.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One must think that it&amp;#8217;s not a big deal, because catching &lt;em&gt;some cases&lt;/em&gt; is better than not catching at all, and I agree, but that&amp;#8217;s not the expectation when you read what the tool promises.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the end, any tool which tries to parse build files and tries to interpret its model based on string evaluations is doomed to fail.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Even if it manages to catch some problems, things can go wrong. As an example, here&amp;#8217;s what we got at Gradle for this JUnit upgrade:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;/blog/img/dependabomb.jpg&quot; alt=&quot;dependabomb&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For a &lt;strong&gt;single repository&lt;/strong&gt;, it created &lt;strong&gt;dozens&lt;/strong&gt; of individual pull requests to ask us to upgrade.
That&amp;#8217;s nice of you, Dependabot, but it&amp;#8217;s totally missing the point: this repository contains generated code, used in performance testing.
The way the code is layout, the repetition of dependency declarations, etc, everything is intentional.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you put apart the fact that Dependabot could have created a single pull request for all dependencies, instead of creating hundreds, it highlights a general problem with those automated detection tools:&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&quot;_context_matters&quot; class=&quot;sect0&quot;&gt;Context matters!&lt;/h1&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At Gradle, we often receive emails from security teams telling us things like: &quot;The Gradle distribution contains a dependency on this X library which has vulnerability Y&quot;.
However, in almost all cases we&amp;#8217;ve investigated, this was a no issue for us.
Because of the nature of Gradle, the fact that by definition it runs arbitrary code on a machine, most vulnerabilities are not a problem in this environment: context matters.
What&amp;#8217;s more, even if your tool uses a library that has a critical vulnerability (we use Jackson for example, which had a number of thems recently), it doesn&amp;#8217;t mean that your code &lt;strong&gt;exercises the path which is vulnerable&lt;/strong&gt;: context matters!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It&amp;#8217;s not harmful to upgrade, but it creates a lot of noise.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&quot;_wrong_impression_of_security&quot; class=&quot;sect0&quot;&gt;Wrong impression of security&lt;/h1&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;But the biggest problem with such tools, and again I&amp;#8217;m using Dependabot as an example, is that they &lt;strong&gt;give a wrong impression of security&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As I explained, Dependabot will basically read your POM files, or Gradle files, or whatever build tool files you use, and &lt;em&gt;assume that the version it reads is the version which is going to be used&lt;/em&gt;.
We, as developers, and even more as build tool authors, know that this is wrong: the dependencies you declare are rarely the ones you resolve.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s the reason why tools like NPM (Javascript), Gradle (multi-language) or Cargo (Rust) make use of &lt;a href=&quot;https://docs.gradle.org/current/userguide/dependency_locking.html&quot;&gt;dependency locking&lt;/a&gt;.
Dependency locking is a concept which helps with build reproducibility.
Say, for example, that you write:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint groovy language-groovy&quot;&gt;&lt;code&gt;dependencies {
   implementation &apos;org.mylib:awesome:[1.0, 2[&apos;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This means that Gradle can pick whatever version of &lt;code&gt;awesome&lt;/code&gt; as long as it&amp;#8217;s in the range.
This is a typical declaration for semantic versioning, when you expect a library to be upgradable up to the next major.
In Gradle you can even improve this by explaining what version you prefer in the range, if nobody else cares:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint groovy language-groovy&quot;&gt;&lt;code&gt;dependencies {
   implementation(&apos;org.mylib:awesome&apos;) {
      version {
          require &apos;[1.0, 2[&apos;
          prefer &apos;1.3&apos;
      }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;However, ranges come at a price: if a new dependency version is released, your build would suddenly start using this new version, which breaks reproducibility in case you checkout old code, for example, for a bugfix.
Therefore, as soon as you use ranges (and by extension any &lt;em&gt;dynamic dependency version&lt;/em&gt;), you should use it with &lt;em&gt;dependency locking&lt;/em&gt;.
Dependency locking will make sure that whatever version of a library resolved at time T is used at time T+N even if a new version is out.
It does so by writing the result of the dependency resolution process in a lock file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Upgrading dependencies becomes an intentional process that you do from time to time by generating a new lock file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What is the relationship with tools like Dependabot?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;By using the versions you &lt;em&gt;declare&lt;/em&gt;, they have absolutely no guarantee that the versions you resolve are &lt;em&gt;not vulnerable&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the example above, imagine that I use range &lt;code&gt;[1.0, 2[&lt;/code&gt; and that I&amp;#8217;m resolving 1.3.
At some point in time, version 2.1 is released and is vulnerable.
You could imagine that because you used a range and that 2.1 is out of the range, you are safe.
That&amp;#8217;s what those tools would assume, but they would be wrong: the reality is that despite this declaration, by the play of conflict resolution (Ivy, Gradle, &amp;#8230;) or ordering (Maven), a totally different version can be selected, even 2.1!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Again there are &lt;a href=&quot;https://docs.gradle.org/current/userguide/resolution_strategy_tuning.html&quot;&gt;tools to mitigate this problem&lt;/a&gt;, but the reality is that by just reading the declaration, you&amp;#8217;re not safe.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It&amp;#8217;s even worse than that: what about transitive dependencies?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Imagine that you have:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;code&gt;Foo -&amp;gt; Bar -&amp;gt; Baz&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And that you depend on &lt;code&gt;Foo&lt;/code&gt;. What if a vulnerability is discovered on &lt;code&gt;Baz&lt;/code&gt;? Will you be notified? What kind of automated pull request can such a tool make to make sure that you upgrade &lt;code&gt;Baz&lt;/code&gt;?&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&quot;_can_we_do_better&quot; class=&quot;sect0&quot;&gt;Can we do better?&lt;/h1&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I have some good and bad news for you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The good news is that we can do better.
The bad news is that it&amp;#8217;s not easy.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;First, instead of relying on the declaration, those tools should really rely on the result of dependency resolution.
If, for example, they used the lock files instead of the build files, they would know exactly what a build resolves.
This, however, is only possible if the build uses dependency locking, and only for dependency graphs which are actually locked.
It&amp;#8217;s a reasonable assumption to say that what is locked is the most relevant information, though.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Of course, I said there were bad news.
As soon as you use the resolution result, you almost have to give up on automated remediation (pull requests).
One thing they &lt;em&gt;could&lt;/em&gt; do is patching the lock file.
However, this is in general not a good idea, because, as I explained, lock files are generated: they present to you the result of resolution.
Partially upgrading a lock file, manually, is possible but then you cannot make any guarantee that the app is going to work, because introducing a different dependency version may introduce different transitive dependencies!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;An alternate solution is to gather the information about resolved dependencies during the build: this is what scans.gradle.com/[build scans] do for Gradle and Maven, for example.
This information can be extracted during the build and Dependabot would know precisely, reliably, what is resolved by a project.
We even offer a Tooling API to do this kind of work.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then there&amp;#8217;s remediation.
This is the hardest problem.
Because what most people like about Dependabot is actually the automated remediation: pull requests are nice, we all love that.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;But say, that to fix the transitive dependency issue above, Dependabot suggested to add a first level dependency with a different version.
For Maven, this would work, since it&amp;#8217;s order and depth sensitive.
But it would break your model: the application doesn&amp;#8217;t depend on &lt;code&gt;Baz&lt;/code&gt;: it depends on &lt;code&gt;Foo&lt;/code&gt;, which, by the transitive game, depends on &lt;code&gt;Baz&lt;/code&gt;.
You don&amp;#8217;t want to introduce a first level dependency on &lt;code&gt;Baz&lt;/code&gt; because it doesn&amp;#8217;t make sense.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For Gradle, you could use dependency constraints instead: constraints are meant for this use case.
A &lt;a href=&quot;https://docs.gradle.org/current/userguide/dependency_constraints.html#sec:adding-constraints-transitive-deps&quot;&gt;constraint&lt;/a&gt; adds, as it name implies, a constraint to the equation of the resolution of the graph (a bit like in constraint programming).
They would participate in the dependency graph resolution if, and only if, the dependency they talk about appears in the graph.
In that sense, they don&amp;#8217;t break the application model, by introducing arbitrary first-level dependencies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our Java ecosystem is polluted by hundreds of accidental first level dependencies and exclusions because of this lack of modeling: it is important to get things right.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Last but not least, how you declare dependencies matters.
In Gradle, using &lt;a href=&quot;https://docs.gradle.org/current/userguide/rich_versions.html#header&quot;&gt;rich version constraints&lt;/a&gt;, you can explicitly reject bad versions, and you can explain why.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&quot;_conclusion&quot; class=&quot;sect0&quot;&gt;Conclusion&lt;/h1&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In conclusion, I think that Dependabot&amp;#8217;s intent is legitimate and that today it&amp;#8217;s better than nothing. Let&amp;#8217;s detect projects using vulnerable dependencies and propose automated remediation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We, as build tool authors, also need to consider the wider context, which is dependency resolution in general, which isn&amp;#8217;t as simple as it seems.
In particular we consider that &lt;em&gt;detection&lt;/em&gt; is an easy problem if you use the right tools, while &lt;em&gt;remediation&lt;/em&gt; is a hard one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I think the current implementation of Dependabot is mostly wrong (at least in the Java ecosystem) as it relies on the declaration. This raises a number of issues:
- it is dependent to the patterns it recognizes
- it assumes that what you see is what you get
- it cannot recognize transitive dependencies actually resolved by your project, so it misses real vulnerabilities
- it doesn&amp;#8217;t matter about the context of use of your dependencies&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The context thing is difficult to solve, but it&amp;#8217;s actually painful because of the noise it creates, in case the &quot;vulnerable dependency&quot; is actually not in your case.
However, I think there are improvements which can me made by actually using the actual resolution results instead.
Then it raises some interesting technical challenges, like how to sandbox execution of builds (GitHub actions already do this) but more importantly how to create an automated pull request from the result of the analysis.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Note that I also understand that from a Dependabot creator point of view, having to implement build-tool specific logic, like calling the Tooling API, to gather information about resolved dependencies might sound scary.
I still think this is the right thing to do to be correct and, if our goal is really to make the industry safer, that&amp;#8217;s what we should do.
However, we have alternate solutions. For example a few weeks ago I experimented with a &lt;a href=&quot;https://github.com/melix/gradle-command-action/tree/dump-dependencies&quot;&gt;fork of my friend and colleague Paul Merlin&amp;#8217;s Gradle Command GitHub Action&lt;/a&gt; which automatically generates a JSON file of resolved dependencies during the build.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/ysb33r/&quot;&gt;Schalk CronjÃ©&lt;/a&gt; also mentioned to me the &lt;a href=&quot;https://github.com/jeremylong/dependency-check-gradle&quot;&gt;OWASP plugin&lt;/a&gt;, which I forgot to mention when I originally wrote this blog post, but I think it a great answer and currently better answer because it does exactly what I describe: rely on what you actually resolve, not what you declare, and lets you carefully review the results via a generated report.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m not sure this is the best answer, but it shows that we can attack the problem from different angles.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Eventually, the key takeaway of this blog post should be: don&amp;#8217;t assume that you are safe because you use Dependabot. You&amp;#8217;re not.&lt;/p&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Configuring git to use main instead of master</title>
      <link>https://melix.github.io/blog/2020/06/updating-git.html</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0200</pubDate>
      <guid isPermaLink="false">2020/06/updating-git.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I don&amp;#8217;t need to explain the backstory, and I am not interested in a discussion whether this change makes sense or not, nor am I interested in the technical problems it could cause if someone changes the name: technical issues shouldn&amp;#8217;t be a reason to stop us from improving.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Actually, if you are reading this, there are good chances you&amp;#8217;re already in the mindset of removing potentially offensive language from your project, thank you!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The fact is, we have better, more descriptive technical names than &quot;master&quot; and &quot;slave&quot; and we don&amp;#8217;t have to use terms which refer to dark ages of our history, so let&amp;#8217;s get rid of them in tech.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this blog post, you will learn:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;how to make &lt;code&gt;git init&lt;/code&gt; create your project with a &lt;code&gt;main&lt;/code&gt; branch instead of &lt;code&gt;master&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;how to rename your &lt;code&gt;master&lt;/code&gt; branch to &lt;code&gt;main&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;how to make the change on GitHub&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Be aware that renaming branches may break your existing integrations (typically with CI or Slack notifications) so only do it when you&amp;#8217;re ready.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_configuring_git_init&quot;&gt;Configuring git init&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;By default, when you create a new project, &lt;code&gt;git init&lt;/code&gt; will create a &lt;code&gt;master&lt;/code&gt; branch.
There&amp;#8217;s no option in &lt;code&gt;git init&lt;/code&gt; to change this, but it&amp;#8217;s actually quite easy to set it up differently.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;First, in your &lt;code&gt;~/.gitconfig&lt;/code&gt; file, add the following:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;~/.gitconfig&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code&gt;[init]
    templateDir = ~/.config/git/template/&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then create, if it doesn&amp;#8217;t exist, the following directory:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code&gt;mkdir ~/.config/git/template&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;next create this file:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;~/.config/git/template/HEAD&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code&gt;ref: refs/heads/main&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;(don&amp;#8217;t forget to add a new line at the end of the first line)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Starting from now, calling &lt;code&gt;git init&lt;/code&gt; will create a &lt;code&gt;main&lt;/code&gt; branch instead of &lt;code&gt;master&lt;/code&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now let&amp;#8217;s deal with existing projects.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_renaming_your_master_branch&quot;&gt;Renaming your master branch&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For your current projects, you may want to rename the &lt;code&gt;master&lt;/code&gt; branch to &lt;code&gt;main&lt;/code&gt;.
This is also single command in &lt;code&gt;git&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code&gt;git checkout master
git branch -m main&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then you can push the branch to your remote&amp;#8230; but be careful, it will create a &lt;em&gt;new branch&lt;/em&gt; on the remote:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code&gt;git push origin main&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_configuring_github_to_use_code_main_code_instead_of_code_master_code&quot;&gt;Configuring GitHub to use &lt;code&gt;main&lt;/code&gt; instead of &lt;code&gt;master&lt;/code&gt;&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Once you&amp;#8217;ve pushed your new branch, you need to tell GitHub that this is your new &quot;default branch&quot;.
To do this, go to &lt;code&gt;Settings&lt;/code&gt; &amp;#8594; &lt;code&gt;Branches&lt;/code&gt; and select your new branch as the default one:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;/blog/img/github-branch.png&quot; alt=&quot;github branch&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Last but not least, you need to delete the old branch from GitHub, which can be done by calling this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code&gt;git push origin :master&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Done!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Using Java feature previews with Gradle</title>
      <link>https://melix.github.io/blog/2020/06/java-feature-previews-gradle.html</link>
      <pubDate>Thu, 11 Jun 2020 00:00:00 +0200</pubDate>
      <guid isPermaLink="false">2020/06/java-feature-previews-gradle.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You&amp;#8217;ve probably heard about Java providing features like &lt;a href=&quot;https://blogs.oracle.com/javamagazine/records-come-to-java&quot;&gt;records&lt;/a&gt;, &lt;a href=&quot;https://docs.oracle.com/en/java/javase/13/text_blocks/index.html&quot;&gt;multi-line text blocks&lt;/a&gt; or &lt;a href=&quot;https://blogs.oracle.com/javamagazine/inside-the-language-sealed-types&quot;&gt;sealed types&lt;/a&gt; and you&amp;#8217;d like to try them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Those features are called &lt;em&gt;feature previews&lt;/em&gt; and it means a couple of things:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;the Java team wants you to test them and give feedback. They want honest feedback about how it &lt;em&gt;feels&lt;/em&gt; to use them, whether you like them or not. Both ways, feedback is important.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;because they are feature previews, you &lt;em&gt;shouldn&amp;#8217;t&lt;/em&gt; them use in production, but you can play with them for toy projects.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There&amp;#8217;s actually an important thing about point 2 if you are a &lt;em&gt;library author&lt;/em&gt;: &lt;strong&gt;never, ever publish a library which uses feature previews on Maven Central&lt;/strong&gt;. The reason is that the feature previews &lt;em&gt;leak to consumers&lt;/em&gt;: as soon as &lt;em&gt;you&lt;/em&gt; start using them, any project depending on your code will also have to enable them. This is not a problem for toy projects, it&amp;#8217;s clearly a problem for published libraries. In particular, there are no guarantees that the generated bytecode will be compatible with future Java releases, and there are no guarantees that the feature preview will make it to Java eventually.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The goal of this blog post is not to explain what records or sealed classes are, there&amp;#8217;s already a lot of litterature about it.
Instead, we&amp;#8217;re going to explain how to configure your Gradle build to use feature previews and therefore report issues/bugs to the JDK team.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_configuring_your_gradle_build&quot;&gt;Configuring your Gradle build&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The code in this blog post is available on a &lt;a href=&quot;https://github.com/melix/gradle-java-feature-previews&quot;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;First, make sure you are using latest Gradle versions.
If you use the repository above, the Gradle wrapper will make sure that you do.
Gradle 6.5, for example, works perfectly fine with Java 14 and even Java 15.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Imagine that you want to compile the following record:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint java language-java&quot;&gt;&lt;code&gt;public record Person(
        String firstName,
        String lastName,
        boolean likeJavaRecords) {

}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And execute this test:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint java language-java&quot;&gt;&lt;code&gt;class PersonTest {
    @Test void testRecord() {
        Person cedric = new Person(&quot;CÃ©dric&quot;, &quot;Champeau&quot;, true);
        Person otherCedric = new Person(&quot;CÃ©dric&quot;, &quot;Champeau&quot;, true);
        assertEquals(cedric, otherCedric);
        assertTrue(cedric.likeJavaRecords());
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then you need to configure the build to do a couple of things:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;First, we need to tell the Java compiler to use feature previews:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint kotlin language-kotlin&quot;&gt;&lt;code&gt;tasks.withType&amp;lt;JavaCompile&amp;gt;().configureEach {
    options.compilerArgs.add(&quot;--enable-preview&quot;)
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then we need to tell the test runtime to use feature previews:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint kotlin language-kotlin&quot;&gt;&lt;code&gt;tasks.withType&amp;lt;Test&amp;gt;().configureEach {
    useJUnitPlatform()
    jvmArgs(&quot;--enable-preview&quot;)
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And that&amp;#8217;s it, you can run the build with &lt;code&gt;./gradlew test&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_configuring_gradle_to_use_a_different_jdk_from_its_own_runtime&quot;&gt;Configuring Gradle to use a different JDK from its own runtime&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Usually, people use the same JDK version for running Gradle, than they use to compile and execute tests.
It doesn&amp;#8217;t have to be that way, and actually the Gradle team is working on adding support for toolchains to simplify the configuration of builds in this case.
In the mean time, if for some reason your Gradle build doesn&amp;#8217;t want to start on JDK 15, but it works on 14, then you can easily configure Gradle to fork compilation and execution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can for example configure the build to use a JDK found externally by specifying an environment variable like in the example below:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint kotlin language-kotlin&quot;&gt;&lt;code&gt;providers.environmentVariable(&quot;JDK15&quot;)
        .forUseAtConfigurationTime()
        .map(::File)
        .orNull?.let { javaHome -&amp;gt;
            println(&quot;Configuring your build to use JDK 15 from $javaHome&quot;)
            tasks.withType&amp;lt;Test&amp;gt;().configureEach {
                executable = &quot;${javaHome}/bin/java&quot;
            }

            tasks.withType&amp;lt;JavaCompile&amp;gt;().configureEach {
                options.isFork = true
                options.forkOptions.javaHome = javaHome
                options.compilerArgs.addAll(listOf(&quot;--release&quot;, &quot;15&quot;))
            }
        }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now you don&amp;#8217;t have any excuse not to try feature previews!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Mon engagement pour Montaigu-VendÃ©e</title>
      <link>https://melix.github.io/blog/2020/03/mvea2020.html</link>
      <pubDate>Sat, 7 Mar 2020 00:00:00 +0100</pubDate>
      <guid isPermaLink="false">2020/03/mvea2020.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;J&amp;#8217;ai 40 ans et je suis arrivÃ© sur Montaigu voici 17 ans. Comme beaucoup d&amp;#8217;entre nous, c&amp;#8217;est pour des raisons professionnelles que nous y avons emmÃ©nagÃ© avec ma jeune Ã©pouse.
Elle avait trouvÃ© un travail sur Les Herbiers, je travaillais sur Nantes, Montaigu Ã©tait l&amp;#8217;endroit idÃ©al pour nous.
Nous voici en 2020, nous avons 2 grands garÃ§ons, et si notre situation professionnelle a Ã©voluÃ© (nous sommes tous 2 tÃ©lÃ©travailleurs) et que nous aurions pu dÃ©mÃ©nager, nous avons au contraire choisi de faire notre vie ici et sommes attachÃ©s Ã  ce territoire.
Il y a 6 ans, nous quittions notre petit logement sur Montaigu et achetions donc notre maison sur Saint Hilaire de Loulay, en village.
AprÃ¨s presque deux dÃ©cennies passÃ©es ici, aprÃ¨s nos engagements associatifs, nos nouveaux amis ici, il Ã©tait temps, enfin, d&amp;#8217;entrer au service des citoyens de Montaigu-VendÃ©e.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;/blog/img/mvea-logo.jpg&quot; alt=&quot;mvea logo&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_la_liste_montaigu_vend_e_ensemble_et_autrement&quot;&gt;La liste Montaigu-VendÃ©e Ensemble et Autrement&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Si le territoire de Montaigu-VendÃ©e est riche et, Ã©conomiquement, le territoire est attractif, il y a beaucoup de choses Ã  amÃ©liorer.
J&amp;#8217;ai choisi de m&amp;#8217;engager sur la liste de &lt;a href=&quot;https://mvea2020.fr&quot;&gt;Vincent MATHIEU&lt;/a&gt; parce que je suis convaincu qu&amp;#8217;une autre voie est possible, basÃ©e sur 3 piliers qui sont aussi chers Ã  mon coeur:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;la transition Ã©cologique, parce que je suis convaincu que c&amp;#8217;est en travaillant au niveau local, en engageant des actions simples Ã  notre niveau que nous feront de ruisseaux de grandes riviÃ¨res&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;la dÃ©mocratie participative, oÃ¹ comment remettre le citoyen au coeur des dÃ©cisions, avoir des Ã©lus au service des citoyens et non l&amp;#8217;inverse&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;le mieux vivre ensemble, en prenant en compte &lt;strong&gt;tous&lt;/strong&gt; les habitants, personnes Ã¢gÃ©es, jeunes, personnes en situation de handicap, de tous milieux sociaux et en exploitant notre trÃ¨s actif rÃ©seau associatif&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_la_transition_ecologique&quot;&gt;La Transition Ecologique&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Je suis particuliÃ¨rement attachÃ© Ã  l&apos;Ã©cologie depuis ma jeunesse.
Lorsque je parle d&apos;Ã©cologie, je prÃ´ne toujours une Ã©cologie pragmatique, pas dogmatique et encore moins Ã©sotÃ©rique.
Je suis pour l&apos;Ã©cologie qui fait avancer les choses dans la concertation, une Ã©cologie qui prend en compte &lt;strong&gt;tous&lt;/strong&gt; les acteurs, entreprises, paysans, citoyens et enfants.
Le 5 mars dernier, nous Ã©tions le &quot;jour du dÃ©rÃ¨glement&quot;, ce jour de basculement oÃ¹ en France, nous commenÃ§ons Ã  produire plus de carbone que l&apos;Ã©cosystÃ¨me peut en absorber.
C&amp;#8217;est dire l&amp;#8217;urgence de la situation, mais l&apos;Ã©cologie ne se limite pas au prisme du rÃ©chauffemenent climatique.
En campagne, il est facile de constater les ravages sur la biodiversitÃ©: en 40 ans, ce sont 60% des espÃ¨ces sauvages qui ont disparu, 40 ans seulement!
Comme le citait Antoine de Saint ExupÃ©ry, &lt;strong&gt;nous n&amp;#8217;hÃ©ritons pas de la terres de nos ancÃªtres, nous empruntons celle de nos enfants&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;C&amp;#8217;est ici une diffÃ©rence fondamentale avec la majoritÃ© sortante, qui, soyons clairs, n&amp;#8217;a rien fait pour l&apos;Ã©cologie.
Pire, lorsqu&amp;#8217;elle affirme dans les journaux que Vincent MATHIEU &quot;n&amp;#8217;est pas issu du cru local, ses parents n&amp;#8217;ont pas de pieds de vigne dans le secteur&quot;, nous constatons avec effarement un tel mÃ©pris de notre gÃ©nÃ©ration, des gÃ©nÃ©rations futures, mais aussi des 600 nouveaux habitants qui chaque annÃ©e, arrivent sur notre terroire. 600 habitants, que, au passage, les Ã©lus actuels sont heureux de voir participer Ã  l&amp;#8217;activitÃ© Ã©conomique, heureux d&amp;#8217;avoir pour qu&amp;#8217;il soit, come une fois de plus annoncÃ© dans les journaux, nommÃ© PrÃ©sident d&amp;#8217;une CommunautÃ© d&amp;#8217;AgglomÃ©ration qui n&amp;#8217;existe pas encore (faute d&amp;#8217;habitants suffisants !), mais dont il nie l&amp;#8217;expression de la dÃ©mocratie lorsqu&amp;#8217;ils ne sont pas issus du secteur. Dont acte.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A titre personnel, je suis aussi attachÃ© Ã  la lutte contre la pollution lumineuse.
Je constate, en tant qu&amp;#8217;astronome amateur, la dÃ©gradation du ciel nocture.
Je constate que les gens sont surpris lorsqu&amp;#8217;ils dÃ©couvrent, lors de la manifestation des Etoiles du Lac Ã  La GuyonniÃ¨re (dont l&amp;#8217;existence est menacÃ©e par la majoritÃ© en place), qu&amp;#8217;ils peuvent voir la voie lactÃ©e.
Je constate aussi que nous n&amp;#8217;avons, mÃªme ici en campagne, presque plus de papillons de nuit et que les insectes ont presque tous disparus.
Il s&amp;#8217;agit d&amp;#8217;une catastrophe contre laquelle nous pouvons, tous ensemble, lutter.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Que dire de cette majoritÃ©, qui, Ã  l&amp;#8217;heure oÃ¹ l&amp;#8217;on parle de planter des arbres, a rasÃ© tous les arbres de la place de la mairie ? Que dire de cette majoritÃ© qui a coupÃ© les magnifiques cerisiers en fleurs du Boulevard Auguste Durand pour les remplacer par&amp;#8230; du goudron ! Que dire lorsque &lt;strong&gt;tous&lt;/strong&gt; les cours d&amp;#8217;eau du territoire ont leurs indicateurs de qualitÃ© dans le rouge ?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Alors peut-on faire mieux ? Avec un tel bilan pour la majoritÃ© sortante, Ã§a n&amp;#8217;est pas compliquÃ©.
Je vous invite Ã  lire notre &lt;a href=&quot;https://mvea2020.fr/transition-ecologique.html&quot;&gt;programme sur la transition Ã©cologique&lt;/a&gt;.
J&amp;#8217;insisterai sur ces points:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;nous souhaitons aider toutes celles et ceux, entreprises ou particuliers, qui sont prÃªts Ã  s&amp;#8217;engager dans la transition Ã©cologique.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nous favoriserons l&amp;#8217;implantation d&amp;#8217;entreprises vertueuses, et aiderons les entreprises existantes pour qu&amp;#8217;elles rÃ©alisent des Ã©conomies d&apos;Ã©nergie (et donc d&amp;#8217;argent !) et rÃ©duisent leur impact. Ceci passera par la mise en place d&amp;#8217;indicateurs et de mesure du progrÃ¨s tout au long du mandat&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nous aiderons les habitants de villages dans la mise au normes de l&amp;#8217;assainissmenent. Des solutions Ã©cologiques et collectives existent, et aujourd&amp;#8217;hui &lt;em&gt;personne&lt;/em&gt; n&amp;#8217;aide ces habitants dans des choix qui sont souvent extrÃªmenent onÃ©reux.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nous favoriserons l&amp;#8217;accueil de nouveaux paysans bio ou 0-pesticide et dÃ©velopperons l&amp;#8217;alimentation collective par l&amp;#8217;approvisionnement local, tel que celÃ  se fait sur la GuyonniÃ¨re&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nous rendrons l&amp;#8217;accÃ¨s Ã  la dÃ©chetterie plus simple et gratuit. Nous mettrons aussi Ã  disposition des outils pour ceux qui ne peuvent pas facilement se dÃ©placer (broyage, compostage, &amp;#8230;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nous dÃ©velopperons et sÃ©curiserons les dÃ©veloppements doux (pistes cyclables, chemins piÃ©tonniers, &amp;#8230;) et mettrons en place des solutions de transport collectif entre les communes dÃ©lÃ©guÃ©es&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_la_d_mocratie_participative&quot;&gt;La dÃ©mocratie participative&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ah, la belle dÃ©mocratie Montacutaine ! Qui, il y a 6 ans, avait lu qu&amp;#8217;il y aurait fusion des communes dans les programmes ? Qui a Ã©tÃ© consultÃ© pour cette fusion ? Nous avons bel et bien eu une consultation, celle pour choisir le nom de la commune.
D&amp;#8217;ailleurs, nous, habitants, avions choisi &quot;Montaigu Les Maines&quot;, mais nos Ã©lus avaient dÃ©ja choisi Montaigu-VendÃ©e.
Tout, absolument tout sur Montaigu est Ã  cette image: les Ã©lus prennent les dÃ©cisions dans leur coin, et informent les citoyens a posteriori.
Ceci n&amp;#8217;est pas ma vision de la dÃ©mocratie.
MÃªme s&amp;#8217;il fallait faire cette fusion, il Ã©tait nÃ©cessaire d&amp;#8217;en informer et de faire une concertation avec les citoyens.
Nous ne sommes pas dupes, Ã  Montaigu, l&apos;Ã©lu est au service du Maire, ses ambitions personnelles annoncÃ©es par voie de presse, et non le contraire.
Je ne suis mÃªme pas certain qu&amp;#8217;ils se rendent compte de ce qu&amp;#8217;ils font.
Qui, par exemple, a dÃ©ja vu sur l&amp;#8217;affichage public l&amp;#8217;annonce des conseils municipaux ?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nous souhaitons remettre le citoyen au coeur des dÃ©cisions, et celÃ  se fera en mettant en place des structures adaptÃ©es, participatives: rganisation de conseils municipaux dÃ©lÃ©guÃ©s, composÃ©s pour moitiÃ© d&apos;Ã©lus et pour l&amp;#8217;autre moitiÃ© de citoyens tirÃ©s au sort parmi les volontaires. Il ne s&amp;#8217;agit pas, comme le propose l&amp;#8217;autre liste, de choisir nous mÃªmes les participants, Ã§a n&amp;#8217;est pas notre vision de la dÃ©mocratie: nous souhaitons une vision non partisane des choses !&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Notre territoire est grand et aussi organisÃ© en villages et quartiers. Il nous semble donc indispensable de reflÃ©ter cet aspect dans les prises de dÃ©cision, avec l&amp;#8217;organisation de comitÃ©s locaux, par thÃ©matique, afin que les riverains puissent prendre part aux dÃ©cisions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Il est &lt;a href=&quot;https://mvea2020.fr/democratie-participative.html&quot;&gt;temps que le citoyen redevienne le centre de la discussion publique&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_le_mieux_vivre_ensemble&quot;&gt;Le mieux-vivre ensemble&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Il s&amp;#8217;agit encore d&amp;#8217;un point qui me tient particuliÃ¨rement Ã  coeur.
Notre territoire se doit d&apos;Ãªtre accueillant, quelle que soit la population.
Nos Ã©lus, par exemple, on fait le choix de payer des amendes plutÃ´t que de respecter l&amp;#8217;obligation de 20% de logements sociaux.
Ils mettent aussi en place des &quot;nouveaux quartiers&quot; tels que les Hauts de Montaigu, oÃ¹ le ticket d&amp;#8217;entrÃ©e pour une maison de 110m2 et un terrain de 250m2 se situe aux alentours de 250kâ¬ !
Nous pensons que nous pouvons, que nous &lt;strong&gt;devons&lt;/strong&gt; faire autrement: crÃ©ation d&apos;Ã©co-quartiers intergÃ©nÃ©rationnels, par exemple.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ces quartiers ont Ã  la fois un intÃ©rÃªt Ã©cologique, mais aussi de relation sociale. Avec une partie de la population qui veillit et une autre partie de la population qui croit rapidement (pour des raisons Ã©conomiques), nous pensons que nous pouvons organiser nos quartiers de maniÃ¨re Ã  encourager la mixitÃ© sociale, la relation entre personnes Ã¢gÃ©es et jeunes en vivant Ensemble et Autrement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nous pensons qu&amp;#8217;il y a une alternative aux EHPAD et qu&amp;#8217;en particulier le maitien des personnes Ã¢gÃ©es dans un environnement au milieu d&amp;#8217;actifs et de jeunes est Ã  la fois une garantie d&amp;#8217;un veillissement dans de meilleures conditions, mais aussi plus humaine.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nous avons aussi la chance, sur notre territoire, d&amp;#8217;avoir un tissu associatif extrÃªmement actif.
Toutes ces bonnes volontÃ©s ont besoin d&apos;Ãªtre encouragÃ©es.
Il est dÃ©ja trÃ¨s difficile de trouver des bÃ©nÃ©voles, alors que dire lorsque la municipalitÃ© ne s&amp;#8217;engage pas ou, pire, tente de saboter des projets parce qu&amp;#8217;ils sont jugÃ©s trop &quot;populaires&quot; ?
Nous nous appuierons au contraire sur ces associations et nous mettrons en place la transparence dans l&amp;#8217;attribution des subventions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nous transformerons aussi nos mairies annexes en maisons de services aux citoyen, de faÃ§on Ã  favoriser l&amp;#8217;interaction, mais aussi aider toutes les personnes en difficultÃ©.
Parfois, il s&amp;#8217;agira de difficultÃ©s de logement, Ã©conomiques, mais aussi parfois des difficultÃ©s dans l&amp;#8217;apprÃ©hension des outils numÃ©riques (nous pensons par exemple Ã  la tÃ©lÃ©-dÃ©claration de revenus).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nous pensons aussi Ã  tous les citoyens, en particulier ceux en situation de handicap.
La situation de la ville de Montaigu est catastrophique Ã  cet Ã©gard: impossible pour une personne en fauteuil roulant de faire ses courses en centre-ville.
Nous souhaitons, au contraire, renforcer les centre-villes en les rendant accessibles &lt;strong&gt;pour tous&lt;/strong&gt;, en travaillant avec les petits commerÃ§ants qui font vivre nos villes, plutÃ´t qu&amp;#8217;en dÃ©veloppant, comme Ã  l&amp;#8217;heure actuelle, les grandes surfaces commerciales en pÃ©riphÃ©rie.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Enfin, il s&amp;#8217;agit aussi d&amp;#8217;aider notre jeunesse.
Combien de fois avez-vous croisÃ© des jeunes en train de faire du skate sur la voie publique ? Notre majoritÃ© actuelle a prÃ©fÃ©rÃ© offrir une rÃ©duction sur le tarif des terrains aux promoteurs immobiliers, plutÃ´t que d&amp;#8217;investir 80kâ¬ (sur un budget de 16Mâ¬) pour donner Ã  nos jeunes des lieux oÃ¹ s&amp;#8217;amuser. Que dire de l&apos;Ã©tat des pistes cyclables ? Pensez-vous que vos enfants peuvent, en toute sÃ©curitÃ©, partir du collÃ¨ge et se rendre Ã  leur entraÃ®nement de sport Ã  Saint Georges de Montaigu ?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Bref, dans une semaine, le 15 Mars, vous devrez choisir vos Ã©lus.
Je me prÃ©sente humblement sur la liste de Vincent MATHIEU, une liste composÃ©e de citoyens impliquÃ©s, d&amp;#8217;horizons et compÃ©tences diffÃ©rents et j&amp;#8217;espÃ¨re Ãªtre bientÃ´t Ã  votre service pour une vie meilleure, Ensemble et Autrement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Comme l&amp;#8217;a si bient dit Michel PAVAGEAU, le doyen de notre liste, Ã  Commune Nouvelle, Ãquipe Nouvelle !&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Chronicles of an introvert remote worker</title>
      <link>https://melix.github.io/blog/2020/01/introvert-remote.html</link>
      <pubDate>Fri, 3 Jan 2020 00:00:00 +0100</pubDate>
      <guid isPermaLink="false">2020/01/introvert-remote.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This post is the translation in English of the most popular blog post I wrote in October, 2019, which was originally posted in french.
Lots of folks commented they found it useful and that they recognized themselves in the description so I decided to translate it to English.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The other day I was listening to &lt;a href=&quot;https://lescastcodeurs.com/2019/09/16/lcc-216-l-episode-ou-on-a-perdu-le-compte/&quot;&gt;Les Cast Codeurs podcast&lt;/a&gt; which mentioned the topic of remote working.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some comments made me raise an eyebrow, this post is going to talk about my own experience.
This post is mostly about me and being an introvert.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_remote_working_and_being_an_introvert&quot;&gt;Remote working and being an introvert&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;ve been &lt;em&gt;almost&lt;/em&gt; full-time remote worker for almost 10 years.
I&amp;#8217;m saying &lt;em&gt;almost&lt;/em&gt; because in practice, I&amp;#8217;m moving from time to time for profesional reasons (conferences, meetings).
However, for my daily job, everything is done from home.
Before being a remote worker, I was driving a lot: my job was in Nantes, around 45km from home.
That was about ~90km a day, but more importantly between 2 and 3 hours of commute a day.
The day I switched jobs, working for VMware on the Groovy language, the first shock was that I was recovering those 2 to 3 hours a day.
That&amp;#8217;s a lot of time to spend with your kids (dropping them at school, driving them to sports, &amp;#8230;) or doing housekeeping (fixing, gardening, sports, &amp;#8230;).
I won&amp;#8217;t come back to those advantages because they are mostly known, the only real drawback to me is being capable of handling your own work hours, that is to say, contrary to the belief, not working &lt;em&gt;too much&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The thing I want to talk about is this comment from Antonio GoncalvÃ©s who said:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dump your coffee maker, go out, see people, it&amp;#8217;s important to see other human beings!&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This &lt;a href=&quot;https://twitter.com/CedricChampeau/status/1173893698997936130&quot;&gt;made me react&lt;/a&gt; so I wanted to come back to this topic.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;First, this advice only works if you live in a city, which is not my case.
I (intentionally) live in the countryside, 5kms from the town center.
A &quot;small coffee break&quot; turns into an expedition in those conditions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;But let&amp;#8217;s come to the core of the topic: &quot;It&amp;#8217;s important to see and talk to human beings&quot;, which relates to the &lt;em&gt;necessity not to be alone&lt;/em&gt;.
This is a topic I care about and resonates with a question I often answered when I&amp;#8217;m talking about remote work:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;But aren&amp;#8217;t you tired of being alone and not seeing anybody?&quot;&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Honest answer: &lt;strong&gt;no&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I understand people who need this, but &lt;strong&gt;don&amp;#8217;t think everybody works like you&lt;/strong&gt; and &lt;em&gt;need&lt;/em&gt; to see other people.
Some folks like me live perfectly well without seeing anybody.
I can spend days alone, without me going mad or missing any social relationship.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m part of this population called the &lt;em&gt;introverts&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;An &lt;em&gt;introvert&lt;/em&gt;, contrary to the popular belief, isn&amp;#8217;t antisocial, selfish or without any kind of empathy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An &lt;em&gt;introvert&lt;/em&gt; is someone whose energy is drained by the crowd, by social relationships. It&amp;#8217;s the opposite of an &lt;em&gt;extravert&lt;/em&gt; who needs to see people to recover energy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An &lt;em&gt;introvert&lt;/em&gt; is someone who can&amp;#8217;t stand smalltalk, because they don&amp;#8217;t bring anything to him/her except from draining their energy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An &lt;em&gt;introver&lt;/em&gt; is someone who can talk hours on a topic (s)he&amp;#8217;s passionate about because it&amp;#8217;s &lt;em&gt;worth their energy&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When I was a kid I already avoided being in a group of people.
I didn&amp;#8217;t have many friends (but the friends I had back then I still have them today).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I always freaked out at the idea of being in a group where I knew nobody, be it at school, at sport or even family parties.
Even if I &lt;em&gt;knew&lt;/em&gt; someone, being &lt;em&gt;in a group&lt;/em&gt;, having to entertain social relationships was of extreme difficulty (and it still is today, to some extent).
Everything I cared as a child about back then was being &quot;excellent&quot; at school and my parents be proud of me.
This caused me to get some nicknames (&quot;the nerd&quot;), being hassled or even get some not so nice words written on the back of my classroom photographs, for a large part of my childhood.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As an example, I always refused to go to summer camps (the only experience I got, a week in a stud farm, was so painful to me I still remember it).
I also refused going to snow camps.
However, I &lt;em&gt;did&lt;/em&gt; accept going to England, Ireland and Spain with school, not without fighting myself, because I knew I could learn something out of it, but also because I knew I would be in a small group with a friend.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Similarly, having to stand in front of the rest of the classroom to recite a poem, or worse, sing, was pure torture to me.
On the contrary, I loved being at the University of Science in Nantes, where I could spend some time with 2 or 3 friends max at the coffee shop, discussing with them.
I didn&amp;#8217;t like much the software engineering school I joined to after that, where I had to be extremely creative to avoid the student integration parties, after-work parties and all those driking games most students were fond of: it was incredibly difficult to be recognized as a person without being excluded because I didn&amp;#8217;t participate in those events.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s talk about those &quot;integration&quot; parties. What&amp;#8217;s fun for some, being drunk, &quot;gently&quot; humiliating others, was just disgust and fear for me.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now that I think about it, few people know it, but I spent my whole scolarity in Nantes, not because everything was available there (it was, really), but because I was petrified at the idea of beling &quot;alone&quot; in a new University, an engineering school, somewhere else at the other end of France, &amp;#8230;
I remember a teacher who blamed me for not going in a well known French school despite I had the &quot;capacity&quot; do it.
In retrospect I don&amp;#8217;t think it was a big mistake, I&amp;#8217;m quite happy where I am today!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_i_would_never_hire_someone_like_you&quot;&gt;I would never hire someone like you!&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Everything I explained may sound surprising from someone who, today, gives talks at conferences, sometimes in front of hundreds of people, which sounds a bit irrealistic.
So what&amp;#8217;s the difference?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Well the difference is that when I talk to you in a such a context, I &lt;strong&gt;understand the topic&lt;/strong&gt; (or at least I think I understand it ;)).
I can talk to you openly because I know the questions I will get are directly related to the topic I&amp;#8217;m talking about.
There&amp;#8217;s almost no room for the &lt;em&gt;unknown&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s also for this reason that it&amp;#8217;s still very difficult to me, even today, to reach out to others.
I am still completely incapable of doing small talk.
This goes even beyond that: I&amp;#8217;ve traveled abroad a number of times, multiple times in the US for example, but I &lt;em&gt;never&lt;/em&gt; went outside alone to visit (at best I can walk an hour or two in the neighorhood).
That&amp;#8217;s because doing this drives me outside of my comfort zone: having to talk to people I don&amp;#8217;t know, ordering a meal, asking for directions: all this is draining my energy. It&amp;#8217;s always easy to say you should go out of your comfort zone when doing this is not a trial for you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;However, if I know one or two people and that they kindly ask me to join them, in most cases it will be fine and I would appreciate visiting!
Everybody&amp;#8217;s telling me I&amp;#8217;m incredibly lucky to travel.
Well, maybe, but I, for one, hate this, at least I hate it if I have to do this without my family&amp;#8230;
Even going to Paris, realizing how many people live there, feeling like an ant in the anthill, remind me how much I hate this!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As a consequence, I avoid as much as I can &quot;parties&quot; like speaker dinners or corporate events.
They are often described as the &lt;em&gt;must do&lt;/em&gt; of networking.
While it&amp;#8217;s true that you can learn a lot in those events, they are also incredibly stressful to me.
When I join them, most of the time I&amp;#8217;m trying to identify someone I know, stick with them but I would often leave early and I have to go to my hotel room alone to recover.
I wouldn&amp;#8217;t necessarily &lt;em&gt;sleep&lt;/em&gt;, as some people think I do: often I would work late in my hotel room, I just need to be &lt;em&gt;alone&lt;/em&gt;.
The most terrifying thing to me in those parties is when conversations become &lt;em&gt;extra-professional&lt;/em&gt; which is something I have no &quot;skill&quot; for.
Some would say I&amp;#8217;m a boring guy, that there&amp;#8217;s no interest in talking to me and that&amp;#8217;s probably right if you&amp;#8217;re looking for someone with an extraordinary life, mine is not that much :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A natural conclusion that some people draw from this is that of course I can&amp;#8217;t be a good team player.
In fact I think that&amp;#8217;s quite the opposite: I value &lt;em&gt;trust&lt;/em&gt; like no one else and I think you can &lt;em&gt;trust&lt;/em&gt; me.
One shouldn&amp;#8217;t mix my incapacity to have simple inter-personal relationships with my capacity to have useful professional interactions, which is another totally different dimension.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As I explained, I&amp;#8217;m regularly giving talks and I love more than anything else sharing knowledge and information, helping others.
I also enjoy working with people more competent than me so that I can continue to learn and make progress: in this context working in a team is extremely effective.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Also, it&amp;#8217;s not because you&amp;#8217;re working remotely that you don&amp;#8217;t see anyone and that, effectively, you work &lt;em&gt;alone&lt;/em&gt;.
It&amp;#8217;s quite the opposite: we work as a team.
As other teams we do daily standups (via hangouts or Slack), we organize work.
Sometimes we even do face to face meetings or leverage conferences to meet together and do some work.
So it&amp;#8217;s not because you&amp;#8217;re an introvert that it&amp;#8217;s a problem: I think my colleagues would tell you that it works pretty well actually.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In short, don&amp;#8217;t be afraid of this aspect: being alone is not a problem for everyone. Maybe it is for you, but definitely not for everyone.
On the opposite, being alone can also boost productivity: no interruption, no useless meetings, ability to focus on a problem for hours etc&amp;#8230;
Being introvert doesn&amp;#8217;t mean either that someone is not capable of working in a team: it doesn&amp;#8217;t prevent &lt;em&gt;at all&lt;/em&gt; from helping others, colleagues or customers.
On the contrary, the professional relationship is focused.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So how does it work in practice?
At Gradle, almost everybody is working remotely.
For the socializing aspect, we have an &lt;em&gt;optional&lt;/em&gt; weekly meeting, called &quot;coffee time&quot;, that anyone willing to can join and chat about extra-work topics.
Some need this, I don&amp;#8217;t: the good thing is that we recognize not everybody&amp;#8217;s the same.
Actually I would be in difficulty to join this meeting and know &lt;em&gt;what&lt;/em&gt; to talk about.
Sometimes I even try to avoid being the first one joining a remote call to avoid having to do some small talk because I&amp;#8217;m so uncomfortable with this.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;However, again, talk to me about a topic I know about or that I&amp;#8217;m passionate about. Ask me about a problem to solve, ask me about helping others and I&amp;#8217;ll be happy to do so because there&amp;#8217;s no room for the unknown.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Similarly if we meet in person at a conference and that you wish to talk to me, go ahead: it&amp;#8217;s very likely I will enjoy our conversation: I had several times the opportunity to talk to very famous folks of the Java community (James Gosling, Brian Goetz, Mark Reinholds, &amp;#8230;) and so many others but I just &lt;em&gt;couldn&amp;#8217;t&lt;/em&gt;, it was, physically, impossible to me.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In fact I have so much difficulties coming to someone and opening a discussion that if you do the first step it&amp;#8217;s &lt;em&gt;much&lt;/em&gt; easier.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So: don&amp;#8217;t be surprised if I walk the area 3 times in a row without asking for directions. Don&amp;#8217;t be surprised if I don&amp;#8217;t phone or text you. I&amp;#8217;m not ignoring you.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_don_t_be_ashamed_of_being_an_introvert_but_make_others_understand_what_it_means&quot;&gt;Don&amp;#8217;t be ashamed of being an introvert but make others understand what it means&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Last, in a &lt;a href=&quot;https://twitter.com/CedricChampeau/status/1173893698997936130&quot;&gt;Tweet&lt;/a&gt; I was saying that I was &quot;healing myself&quot;.
That&amp;#8217;s both true and false at the same time.
It&amp;#8217;s true because I&amp;#8217;m aware of the importance of the ignorance of a lot of people about this condition of mine, so I try to work, for example, speaking with others in different contexts.
I am for example the secretary of my karate club, which forces me to talk to people I don&amp;#8217;t know.
I am also the coach of my younger boy&amp;#8217;s (10 yo) basketball team, which I enjoy very much doing: it&amp;#8217;s an activity which allows both spending time with my kid, requires some public communication skills and is very gratifying (seeing kids happy to play, win a match, share this with their parents etc&amp;#8230;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Last but not least it&amp;#8217;s also a message for my son who I know feels very much like me: he also has difficulties speaking to others and I know he works hard to get accepted. He&amp;#8217;s also so proud when he gets recognition from his community.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It took me years to put a name on what I am: I&amp;#8217;m an &lt;em&gt;introvert&lt;/em&gt; and often I have to fight myself not to be ashamed of this.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>

  </channel> 
</rss>
