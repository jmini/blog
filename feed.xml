<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cédric Champeau's blog</title>
    <link>https://melix.github.io/blog/</link>
    <atom:link href="https://melix.github.io/blog//feed.xml" rel="self" type="application/rss+xml" />
    <description>JBake Bootstrap Template</description>
    <language>en-gb</language>
    <pubDate>Sat, 7 Mar 2020 13:56:00 +0100</pubDate>
    <lastBuildDate>Sat, 7 Mar 2020 13:56:00 +0100</lastBuildDate>

    <item>
      <title>Mon engagement pour Montaigu-Vendée</title>
      <link>https://melix.github.io/blog/2020/03/mvea2020.html</link>
      <pubDate>Sat, 7 Mar 2020 00:00:00 +0100</pubDate>
      <guid isPermaLink="false">2020/03/mvea2020.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;J&amp;#8217;ai 40 ans et je suis arrivé sur Montaigu voici 17 ans. Comme beaucoup d&amp;#8217;entre nous, c&amp;#8217;est pour des raisons professionnelles que nous y avons emménagé avec ma jeune épouse.
Elle avait trouvé un travail sur Les Herbiers, je travaillais sur Nantes, Montaigu était l&amp;#8217;endroit idéal pour nous.
Nous voici en 2020, nous avons 2 grands garçons, et si notre situation professionnelle a évolué (nous sommes tous 2 télétravailleurs) et que nous aurions pu déménager, nous avons au contraire choisi de faire notre vie ici et sommes attachés à ce territoire.
Il y a 6 ans, nous quittions notre petit logement sur Montaigu et achetions donc notre maison sur Saint Hilaire de Loulay, en village.
Après presque deux décennies passés ici, après nos engagements associatifs, nos nouveaux amis ici, il était temps, enfin, d&amp;#8217;entrer au service des citoyens de Montaigu-Vendée.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;/blog/img/mvea-logo.jpg&quot; alt=&quot;mvea logo&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_la_liste_montaigu_vend_e_ensemble_et_autrement&quot;&gt;La liste Montaigu-Vendée Ensemble et Autrement&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Si le territoire de Montaigu-Vendée est riche et, économiquement, le territoire est attractif, il y a beaucoup de choses à améliorer.
J&amp;#8217;ai choisi de m&amp;#8217;engager sur la liste de &lt;a href=&quot;https://mvea2020.fr&quot;&gt;Vincent MATHIEU&lt;/a&gt; parce que je suis convaincu qu&amp;#8217;une autre voie est possible, basée sur 3 piliers qui sont aussi chers à mon coeur:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;la transition écologique, parce que je suis convaincu que c&amp;#8217;est en travaillant au niveau local, en engageant des actions simples à notre niveau que nous feront de ruisseaux de grandes rivières&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;la démocratie participative, où comment remettre le citoyen au coeur des décisions, avoir des élus au service des citoyens et non l&amp;#8217;inverse&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;le mieux vivre ensemble, en prenant en compte &lt;strong&gt;tous&lt;/strong&gt; les habitants, personnes âgées, jeunes, personnes en situation de handicap, de tous milieux sociaux et en exploitant notre très actif réseau associatif&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_la_transition_ecologique&quot;&gt;La Transition Ecologique&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Je suis particulièrement attaché à l&apos;écologie depuis ma jeunesse.
Lorsque je parle d&apos;écologie, je prône toujours une écologie pragmatique, pas dogmatique et encore moins ésotérique.
Je suis pour l&apos;écologie qui fait avancer les choses dans la concertation, une écologie qui prend en compte &lt;strong&gt;tous&lt;/strong&gt; les acteurs, entreprises, paysans, citoyens et enfants.
Le 5 mars dernier, nous étions le &quot;jour du dérèglement&quot;, ce jour de basculement où en France, nous commençons à produire plus de carbone que l&apos;écosystème peut en absorber.
C&amp;#8217;est dire l&amp;#8217;urgence de la situation, mais l&apos;écologie ne se limite pas au prisme du réchauffemenent climatique.
En campagne, il est facile de constater les ravages sur la biodiversité: en 40 ans, ce sont 60% des espèces sauvages qui ont disparu, 40 ans seulement!
Comme le citait Antoine de Saint Exupéry, &lt;strong&gt;nous n&amp;#8217;héritons pas de la terres de nos ancêtres, nous empruntons celle de nos enfants&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;C&amp;#8217;est ici une différence fondamentale avec la majorité sortante, qui, soyons clairs, n&amp;#8217;a rien fait pour l&apos;écologie.
Pire, lorsqu&amp;#8217;elle affirme dans les journaux que Vincent MATHIEU &quot;n&amp;#8217;est pas issu du cru local, ses parents n&amp;#8217;ont pas de pieds de vigne dans le secteur&quot;, nous constatons avec effarement un tel mépris de notre génération, des générations futures, mais aussi des 600 nouveaux habitants qui chaque année, arrivent sur notre terroire. 600 habitants, que, au passage, M. Antoine CHEREAU est heureux de voir participer à l&amp;#8217;activité économique, heureux d&amp;#8217;avoir pour qu&amp;#8217;il soit, come une fois de plus annoncé dans les journaux, nommé Président d&amp;#8217;une Communauté d&amp;#8217;Agglomération qui n&amp;#8217;existe pas encore (faute d&amp;#8217;habitants suffisants !), mais dont il nie l&amp;#8217;expression de la démocratie lorsqu&amp;#8217;ils ne sont pas issus du secteur. Dont acte.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A titre personnel, je suis aussi attaché à la lutte contre la pollution lumineuse.
Je constate, en tant qu&amp;#8217;astronome amateur, la dégradation du ciel nocture.
Je constate que les gens sont surpris lorsqu&amp;#8217;ils découvrent, lors de la manifestation des Etoiles du Lac à La Guyonnière (dont l&amp;#8217;existence est menacée par la majorité en place), qu&amp;#8217;ils peuvent voir la voie lactée.
Je constate aussi que nous n&amp;#8217;avons, même ici en campagne, presque plus de papillons de nuit et que les insectes ont presque tous disparus.
Il s&amp;#8217;agit d&amp;#8217;une catastrophe contre laquelle nous pouvons, tous ensemble, lutter.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Que dire de cette majorité, qui, à l&amp;#8217;heure où l&amp;#8217;on parle de planter des arbres, a rasé tous les arbres de la place de la mairie ? Que dire de cette majorité qui a coupé les magnifiques cerisiers en fleurs du Boulevard Auguste Durand pour les remplacer par&amp;#8230; du goudron ! Que dire lorsque &lt;strong&gt;tous&lt;/strong&gt; les cours d&amp;#8217;eau du territoire ont leurs indicateurs de qualité dans le rouge ?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Alors peut-on faire mieux ? Avec un tel bilan pour la majorité sortante, ça n&amp;#8217;est pas compliqué.
Je vous invite à lire notre &lt;a href=&quot;https://mvea2020.fr/transition-ecologique.html&quot;&gt;programme sur la transition écologique&lt;/a&gt;.
J&amp;#8217;insisterai sur ces points:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;nous souhaitons aider toutes celles et ceux, entreprises ou particuliers, qui sont prêts à s&amp;#8217;engager dans la transition écologique.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nous favoriserons l&amp;#8217;implantation d&amp;#8217;entreprises vertueuses, et aiderons les entreprises existantes pour qu&amp;#8217;elles réalisent des économies d&apos;énergie (et donc d&amp;#8217;argent !) et réduisent leur impact. Ceci passera par la mise en place d&amp;#8217;indicateurs et de mesure du progrès tout au long du mandat&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nous aiderons les habitants de villages dans la mise au normes de l&amp;#8217;assainissmenent. Des solutions écologiques et collectives existent, et aujourd&amp;#8217;hui &lt;em&gt;personne&lt;/em&gt; n&amp;#8217;aide ces habitants dans des choix qui sont souvent extrêmenent onéreux.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nous favoriserons l&amp;#8217;accueil de nouveaux paysans bio ou 0-pesticide et développerons l&amp;#8217;alimentation collective par l&amp;#8217;approvisionnement local, tel que celà se fait sur la Guyonnière&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nous rendrons l&amp;#8217;accès à la déchetterie plus simple et gratuit. Nous mettrons aussi à disposition des outils pour ceux qui ne peuvent pas facilement se déplacer (broyage, compostage, &amp;#8230;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nous développerons et sécuriserons les développements doux (pistes cyclables, chemins piétonniers, &amp;#8230;) et mettrons en place des solutions de transport collectif entre les communes déléguées&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_la_d_mocratie_participative&quot;&gt;La démocratie participative&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ah, la belle démocratie Montacutaine ! Qui, il y a 6 ans, avait lu qu&amp;#8217;il y aurait fusion des communes dans les programmes ? Qui a été consulté pour cette fusion ? Nous avons bel et bien eu une consultation, celle pour choisir le nom de la commune.
D&amp;#8217;ailleurs, nous, habitants, avions choisi &quot;Montaigu Les Maines&quot;, mais nos élus avaient déja choisi Montaigu-Vendée.
Tout, absolument tout sur Montaigu est à cette image: les élus prennent les décisions dans leur coin, et informent les citoyens a posteriori.
Ceci n&amp;#8217;est pas ma vision de la démocratie.
Même s&amp;#8217;il fallait faire cette fusion, il était nécessaire d&amp;#8217;en informer et de faire une concertation avec les citoyens.
Nous ne sommes pas dupes, à Montaigu, l&apos;élu est au service du Maire, ses ambitions personnelles annoncées par voie de presse, et non le contraire.
Je ne suis même pas certain qu&amp;#8217;ils se rendent compte de ce qu&amp;#8217;ils font.
Qui, par exemple, a déja vu sur l&amp;#8217;affichage public l&amp;#8217;annonce des conseils municipaux ?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nous souhaitons remettre le citoyen au coeur des décisions, et celà se fera en mettant en place des structures adaptées, participatives: rganisation de conseils municipaux délégués, composés pour moitié d&apos;élus et pour l&amp;#8217;autre moitié de citoyens tirés au sort parmi les volontaires. Il ne s&amp;#8217;agit pas, comme le propose l&amp;#8217;autre liste, de choisir nous mêmes les participants, ça n&amp;#8217;est pas notre vision de la démocratie: nous souhaitons une vision non partisane des choses !&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Notre territoire est grand et aussi organisé en villages et quartiers. Il nous semble donc indispensable de refléter cet aspect dans les prises de décision, avec l&amp;#8217;organisation de comités locaux, par thématique, afin que les riverains puissent prendre part aux décisions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Il est &lt;a href=&quot;https://mvea2020.fr/democratie-participative.html&quot;&gt;temps que le citoyen redevienne le centre de la discussion publique&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_le_mieux_vivre_ensemble&quot;&gt;Le mieux-vivre ensemble&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Il s&amp;#8217;agit encore d&amp;#8217;un point qui me tient particulièrement à coeur.
Notre territoire se doit d&apos;être accueillant, quelle que soit la population.
Nos élus, par exemple, on fait le choix de payer des amendes plutôt que de respecter l&amp;#8217;obligation de 20% de logements sociaux.
Ils mettent aussi en place des &quot;nouveaux quartiers&quot; tels que les Hauts de Montaigu, où le ticket d&amp;#8217;entrée pour une maison de 110m2 et un terrain de 250m2 se situe aux alentours de 250k€ !
Nous pensons que nous pouvons, que nous &lt;strong&gt;devons&lt;/strong&gt; faire autrement: création d&apos;éco-quartiers intergénérationnels, par exemple.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ces quartiers ont à la fois un intérêt écologique, mais aussi de relation sociale. Avec une partie de la population qui veillit et une autre partie de la population qui croit rapidement (pour des raisons économiques), nous pensons que nous pouvons organiser nos quartiers de manière à encourager la mixité sociale, la relation entre personnes âgées et jeunes en vivant Ensemble et Autrement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nous pensons qu&amp;#8217;il y a une alternative aux EHPAD et qu&amp;#8217;en particulier le maitien des personnes âgées dans un environnement au milieu d&amp;#8217;actifs et de jeunes est à la fois une garantie d&amp;#8217;un veillissement dans de meilleures conditions, mais aussi plus humaine.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nous avons aussi la chance, sur notre territoire, d&amp;#8217;avoir un tissu associatif extrêmement actif.
Toutes ces bonnes volontés ont besoin d&apos;être encouragées.
Il est déja très difficile de trouver des bénévoles, alors que dire lorsque la municipalité ne s&amp;#8217;engage pas ou, pire, tente de saboter des projets parce qu&amp;#8217;ils sont jugés trop &quot;populaires&quot; ?
Nous nous appuierons au contraire sur ces associations et nous mettrons en place la transparence dans l&amp;#8217;attribution des subventions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nous transformerons aussi nos mairies annexes en maisons de services aux citoyen, de façon à favoriser l&amp;#8217;interaction, mais aussi aider toutes les personnes en difficulté.
Parfois, il s&amp;#8217;agira de difficultés de logement, économiques, mais aussi parfois des difficultés dans l&amp;#8217;appréhension des outils numériques (nous pensons par exemple à la télé-déclaration de revenus).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nous pensons aussi à tous les citoyens, en particulier ceux en situation de handicap.
La situation de la ville de Montaigu est catastrophique à cet égard: impossible pour une personne en fauteuil roulant de faire ses courses en centre-ville.
Nous souhaitons, au contraire, renforcer les centre-villes en les rendant accessibles &lt;strong&gt;pour tous&lt;/strong&gt;, en travaillant avec les petits commerçants qui font vivre nos villes, plutôt qu&amp;#8217;en développant, comme à l&amp;#8217;heure actuelle, les grandes surfaces commerciales en périphérie.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Enfin, il s&amp;#8217;agit aussi d&amp;#8217;aider notre jeunesse.
Combien de fois avez-vous croisé des jeunes en train de faire du skate sur la voie publique ? Notre majorité actuelle a préféré offrir une réduction sur le tarif des terrains aux promoteurs immobiliers, plutôt que d&amp;#8217;investir 80k€ (sur un budget de 16M€) pour donner à nos jeunes des lieux où s&amp;#8217;amuser. Que dire de l&apos;état des pistes cyclables ? Pensez-vous que vos enfants peuvent, en toute sécurité, partir du collège et se rendre à leur entraînement de sport à Saint Georges de Montaigu ?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Bref, dans une semaine, le 15 Mars, vous devrez choisir vos élus.
Je me présente humblement sur la liste de Vincent MATHIEU, une liste composée de citoyens impliqués, d&amp;#8217;horizons et compétences différents et j&amp;#8217;espère être bientôt à votre service pour une vie meilleure, Ensemble et Autrement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Comme l&amp;#8217;a si bient dit Michel PAVAGEAU, le doyen de notre liste, à Commune Nouvelle, Équipe Nouvelle !&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Chronicles of an introvert remote worker</title>
      <link>https://melix.github.io/blog/2020/01/introvert-remote.html</link>
      <pubDate>Fri, 3 Jan 2020 00:00:00 +0100</pubDate>
      <guid isPermaLink="false">2020/01/introvert-remote.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This post is the translation in English of the most popular blog post I wrote in October, 2019, which was originally posted in french.
Lots of folks commented they found it useful and that they recognized themselves in the description so I decided to translate it to English.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The other day I was listening to &lt;a href=&quot;https://lescastcodeurs.com/2019/09/16/lcc-216-l-episode-ou-on-a-perdu-le-compte/&quot;&gt;Les Cast Codeurs podcast&lt;/a&gt; which mentioned the topic of remote working.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some comments made me raise an eyebrow, this post is going to talk about my own experience.
This post is mostly about me and being an introvert.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_remote_working_and_being_an_introvert&quot;&gt;Remote working and being an introvert&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;ve been &lt;em&gt;almost&lt;/em&gt; full-time remote worker for almost 10 years.
I&amp;#8217;m saying &lt;em&gt;almost&lt;/em&gt; because in practice, I&amp;#8217;m moving from time to time for profesional reasons (conferences, meetings).
However, for my daily job, everything is done from home.
Before being a remote worker, I was driving a lot: my job was in Nantes, around 45km from home.
That was about ~90km a day, but more importantly between 2 and 3 hours of commute a day.
The day I switched jobs, working for VMware on the Groovy language, the first shock was that I was recovering those 2 to 3 hours a day.
That&amp;#8217;s a lot of time to spend with your kids (dropping them at school, driving them to sports, &amp;#8230;) or doing housekeeping (fixing, gardening, sports, &amp;#8230;).
I won&amp;#8217;t come back to those advantages because they are mostly known, the only real drawback to me is being capable of handling your own work hours, that is to say, contrary to the belief, not working &lt;em&gt;too much&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The thing I want to talk about is this comment from Antonio Goncalvés who said:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dump your coffee maker, go out, see people, it&amp;#8217;s important to see other human beings!&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This &lt;a href=&quot;https://twitter.com/CedricChampeau/status/1173893698997936130&quot;&gt;made me react&lt;/a&gt; so I wanted to come back to this topic.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;First, this advice only works if you live in a city, which is not my case.
I (intentionally) live in the countryside, 5kms from the town center.
A &quot;small coffee break&quot; turns into an expedition in those conditions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;But let&amp;#8217;s come to the core of the topic: &quot;It&amp;#8217;s important to see and talk to human beings&quot;, which relates to the &lt;em&gt;necessity not to be alone&lt;/em&gt;.
This is a topic I care about and resonates with a question I often answered when I&amp;#8217;m talking about remote work:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;But aren&amp;#8217;t you tired of being alone and not seeing anybody?&quot;&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Honest answer: &lt;strong&gt;no&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I understand people who need this, but &lt;strong&gt;don&amp;#8217;t think everybody works like you&lt;/strong&gt; and &lt;em&gt;need&lt;/em&gt; to see other people.
Some folks like me live perfectly well without seeing anybody.
I can spend days alone, without me going mad or missing any social relationship.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m part of this population called the &lt;em&gt;introverts&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;An &lt;em&gt;introvert&lt;/em&gt;, contrary to the popular belief, isn&amp;#8217;t antisocial, selfish or without any kind of empathy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An &lt;em&gt;introvert&lt;/em&gt; is someone whose energy is drained by the crowd, by social relationships. It&amp;#8217;s the opposite of an &lt;em&gt;extravert&lt;/em&gt; who needs to see people to recover energy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An &lt;em&gt;introvert&lt;/em&gt; is someone who can&amp;#8217;t stand smalltalk, because they don&amp;#8217;t bring anything to him/her except from draining their energy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;An &lt;em&gt;introver&lt;/em&gt; is someone who can talk hours on a topic (s)he&amp;#8217;s passionate about because it&amp;#8217;s &lt;em&gt;worth their energy&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When I was a kid I already avoided being in a group of people.
I didn&amp;#8217;t have many friends (but the friends I had back then I still have them today).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I always freaked out at the idea of being in a group where I knew nobody, be it at school, at sport or even family parties.
Even if I &lt;em&gt;knew&lt;/em&gt; someone, being &lt;em&gt;in a group&lt;/em&gt;, having to entertain social relationships was of extreme difficulty (and it still is today, to some extent).
Everything I cared as a child about back then was being &quot;excellent&quot; at school and my parents be proud of me.
This caused me to get some nicknames (&quot;the nerd&quot;), being hassled or even get some not so nice words written on the back of my classroom photographs, for a large part of my childhood.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As an example, I always refused to go to summer camps (the only experience I got, a week in a stud farm, was so painful to me I still remember it).
I also refused going to snow camps.
However, I &lt;em&gt;did&lt;/em&gt; accept going to England, Ireland and Spain with school, not without fighting myself, because I knew I could learn something out of it, but also because I knew I would be in a small group with a friend.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Similarly, having to stand in front of the rest of the classroom to recite a poem, or worse, sing, was pure torture to me.
On the contrary, I loved being at the University of Science in Nantes, where I could spend some time with 2 or 3 friends max at the coffee shop, discussing with them.
I didn&amp;#8217;t like much the software engineering school I joined to after that, where I had to be extremely creative to avoid the student integration parties, after-work parties and all those driking games most students were fond of: it was incredibly difficult to be recognized as a person without being excluded because I didn&amp;#8217;t participate in those events.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s talk about those &quot;integration&quot; parties. What&amp;#8217;s fun for some, being drunk, &quot;gently&quot; humiliating others, was just disgust and fear for me.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now that I think about it, few people know it, but I spent my whole scolarity in Nantes, not because everything was available there (it was, really), but because I was petrified at the idea of beling &quot;alone&quot; in a new University, an engineering school, somewhere else at the other end of France, &amp;#8230;
I remember a teacher who blamed me for not going in a well known French school despite I had the &quot;capacity&quot; do it.
In retrospect I don&amp;#8217;t think it was a big mistake, I&amp;#8217;m quite happy where I am today!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_i_would_never_hire_someone_like_you&quot;&gt;I would never hire someone like you!&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Everything I explained may sound surprising from someone who, today, gives talks at conferences, sometimes in front of hundreds of people, which sounds a bit irrealistic.
So what&amp;#8217;s the difference?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Well the difference is that when I talk to you in a such a context, I &lt;strong&gt;understand the topic&lt;/strong&gt; (or at least I think I understand it ;)).
I can talk to you openly because I know the questions I will get are directly related to the topic I&amp;#8217;m talking about.
There&amp;#8217;s almost no room for the &lt;em&gt;unknown&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s also for this reason that it&amp;#8217;s still very difficult to me, even today, to reach out to others.
I am still completely incapable of doing small talk.
This goes even beyond that: I&amp;#8217;ve traveled abroad a number of times, multiple times in the US for example, but I &lt;em&gt;never&lt;/em&gt; went outside alone to visit (at best I can walk an hour or two in the neighorhood).
That&amp;#8217;s because doing this drives me outside of my comfort zone: having to talk to people I don&amp;#8217;t know, ordering a meal, asking for directions: all this is draining my energy. It&amp;#8217;s always easy to say you should go out of your comfort zone when doing this is not a trial for you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;However, if I know one or two people and that they kindly ask me to join them, in most cases it will be fine and I would appreciate visiting!
Everybody&amp;#8217;s telling me I&amp;#8217;m incredibly lucky to travel.
Well, maybe, but I, for one, hate this, at least I hate it if I have to do this without my family&amp;#8230;
Even going to Paris, realizing how many people live there, feeling like an ant in the anthill, remind me how much I hate this!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As a consequence, I avoid as much as I can &quot;parties&quot; like speaker dinners or corporate events.
They are often described as the &lt;em&gt;must do&lt;/em&gt; of networking.
While it&amp;#8217;s true that you can learn a lot in those events, they are also incredibly stressful to me.
When I join them, most of the time I&amp;#8217;m trying to identify someone I know, stick with them but I would often leave early and I have to go to my hotel room alone to recover.
I wouldn&amp;#8217;t necessarily &lt;em&gt;sleep&lt;/em&gt;, as some people think I do: often I would work late in my hotel room, I just need to be &lt;em&gt;alone&lt;/em&gt;.
The most terrifying thing to me in those parties is when conversations become &lt;em&gt;extra-professional&lt;/em&gt; which is something I have no &quot;skill&quot; for.
Some would say I&amp;#8217;m a boring guy, that there&amp;#8217;s no interest in talking to me and that&amp;#8217;s probably right if you&amp;#8217;re looking for someone with an extraordinary life, mine is not that much :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A natural conclusion that some people draw from this is that of course I can&amp;#8217;t be a good team player.
In fact I think that&amp;#8217;s quite the opposite: I value &lt;em&gt;trust&lt;/em&gt; like no one else and I think you can &lt;em&gt;trust&lt;/em&gt; me.
One shouldn&amp;#8217;t mix my incapacity to have simple inter-personal relationships with my capacity to have useful professional interactions, which is another totally different dimension.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As I explained, I&amp;#8217;m regularly giving talks and I love more than anything else sharing knowledge and information, helping others.
I also enjoy working with people more competent than me so that I can continue to learn and make progress: in this context working in a team is extremely effective.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Also, it&amp;#8217;s not because you&amp;#8217;re working remotely that you don&amp;#8217;t see anyone and that, effectively, you work &lt;em&gt;alone&lt;/em&gt;.
It&amp;#8217;s quite the opposite: we work as a team.
As other teams we do daily standups (via hangouts or Slack), we organize work.
Sometimes we even do face to face meetings or leverage conferences to meet together and do some work.
So it&amp;#8217;s not because you&amp;#8217;re an introvert that it&amp;#8217;s a problem: I think my colleagues would tell you that it works pretty well actually.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In short, don&amp;#8217;t be afraid of this aspect: being alone is not a problem for everyone. Maybe it is for you, but definitely not for everyone.
On the opposite, being alone can also boost productivity: no interruption, no useless meetings, ability to focus on a problem for hours etc&amp;#8230;
Being introvert doesn&amp;#8217;t mean either that someone is not capable of working in a team: it doesn&amp;#8217;t prevent &lt;em&gt;at all&lt;/em&gt; from helping others, colleagues or customers.
On the contrary, the professional relationship is focused.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So how does it work in practice?
At Gradle, almost everybody is working remotely.
For the socializing aspect, we have an &lt;em&gt;optional&lt;/em&gt; weekly meeting, called &quot;coffee time&quot;, that anyone willing to can join and chat about extra-work topics.
Some need this, I don&amp;#8217;t: the good thing is that we recognize not everybody&amp;#8217;s the same.
Actually I would be in difficulty to join this meeting and know &lt;em&gt;what&lt;/em&gt; to talk about.
Sometimes I even try to avoid being the first one joining a remote call to avoid having to do some small talk because I&amp;#8217;m so uncomfortable with this.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;However, again, talk to me about a topic I know about or that I&amp;#8217;m passionate about. Ask me about a problem to solve, ask me about helping others and I&amp;#8217;ll be happy to do so because there&amp;#8217;s no room for the unknown.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Similarly if we meet in person at a conference and that you wish to talk to me, go ahead: it&amp;#8217;s very likely I will enjoy our conversation: I had several times the opportunity to talk to very famous folks of the Java community (James Gosling, Brian Goetz, Mark Reinholds, &amp;#8230;) and so many others but I just &lt;em&gt;couldn&amp;#8217;t&lt;/em&gt;, it was, physically, impossible to me.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In fact I have so much difficulties coming to someone and opening a discussion that if you do the first step it&amp;#8217;s &lt;em&gt;much&lt;/em&gt; easier.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So: don&amp;#8217;t be surprised if I walk the area 3 times in a row without asking for directions. Don&amp;#8217;t be surprised if I don&amp;#8217;t phone or text you. I&amp;#8217;m not ignoring you.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_don_t_be_ashamed_of_being_an_introvert_but_make_others_understand_what_it_means&quot;&gt;Don&amp;#8217;t be ashamed of being an introvert but make others understand what it means&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Last, in a &lt;a href=&quot;https://twitter.com/CedricChampeau/status/1173893698997936130&quot;&gt;Tweet&lt;/a&gt; I was saying that I was &quot;healing myself&quot;.
That&amp;#8217;s both true and false at the same time.
It&amp;#8217;s true because I&amp;#8217;m aware of the importance of the ignorance of a lot of people about this condition of mine, so I try to work, for example, speaking with others in different contexts.
I am for example the secretary of my karate club, which forces me to talk to people I don&amp;#8217;t know.
I am also the coach of my younger boy&amp;#8217;s (10 yo) basketball team, which I enjoy very much doing: it&amp;#8217;s an activity which allows both spending time with my kid, requires some public communication skills and is very gratifying (seeing kids happy to play, win a match, share this with their parents etc&amp;#8230;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Last but not least it&amp;#8217;s also a message for my son who I know feels very much like me: he also has difficulties speaking to others and I know he works hard to get accepted. He&amp;#8217;s also so proud when he gets recognition from his community.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It took me years to put a name on what I am: I&amp;#8217;m an &lt;em&gt;introvert&lt;/em&gt; and often I have to fight myself not to be ashamed of this.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Gradle myth busting: scripting</title>
      <link>https://melix.github.io/blog/2019/11/gradle-scripting.html</link>
      <pubDate>Sun, 3 Nov 2019 00:00:00 +0100</pubDate>
      <guid isPermaLink="false">2019/11/gradle-scripting.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I don&amp;#8217;t particularly enjoy Twitter as a medium for debating (no surprise my bio mentions &quot;this is not a support channel&quot;).
This happened again this week, I got caught in a Maven vs Gradle debate, one more, after I replied to &lt;a href=&quot;https://twitter.com/lukaseder/status/1189889509254713344&quot;&gt;Lukas Eder&lt;/a&gt; that his tweet was a call for FUD.
And it did happen: no surprise, when you submit something like that, the only answers you&amp;#8217;ll get are either people going in your direction &quot;oh yeah, Gradle sucks and here is my personal experience&quot; or similar, this is just human nature.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_the_good_old_debate&quot;&gt;The good old debate&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the end, most of the answers cycle around the same, good old, debate: Gradle uses scripting (Groovy or Kotlin) vs Maven uses declarative.
You&amp;#8217;ll aways find people telling you that XML is better because it locks you down, its fully declarative (&lt;a href=&quot;https://maven.apache.org/plugins/maven-antrun-plugin/&quot;&gt;is it&lt;/a&gt;, really?) and everybody is forced to do the same.
I don&amp;#8217;t counter those arguments, this is a strength of Maven, but it also comes with a number of drawbacks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I promised some of the folks in the conversation some answers (please look down for direct answers to tweets), so here they are. I&amp;#8217;m answering on a blog post because again Twitter is not good for this, it&amp;#8217;s causing a lot of misunderstandings, because you get into multiple, parallel conversations with different people who accidentally get mentioned, and get scuds fired at you without even having time to answer&amp;#8230; Even a blog post is not enough, there&amp;#8217;s so much to say on this topic.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;First, on the so called &quot;declarative vs imperative&quot; model, I will always disagree on this dichotomy. I disagree that Gradle isn&amp;#8217;t declarative. It&amp;#8217;s as declarative as you want it to be. Take this build file I wrote recently, which is an &lt;em&gt;Asciidoctor Reveal.js presentation template&lt;/em&gt; (it allows writing slide decks with Asciidoctor and reveal.js). Here&amp;#8217;s what my build file looks like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;prettyprint kotlin language-kotlin&quot;&gt;&lt;code&gt;plugins {
    id(&quot;org.gradle.presentation.asciidoctor&quot;)
}

presentation {
    githubUserName.set(&quot;melix&quot;)
}

dependencies {
    asciidoctor(&quot;org.asciidoctor:asciidoctorj-diagram:1.5.11&quot;)
}

tasks {
    asciidoctor {
        requires(&quot;asciidoctor-diagram&quot;)
    }

}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I wouldn&amp;#8217;t particularly say this is imperative. It looks &lt;em&gt;very declarative&lt;/em&gt; to me. Concise too. The fact it uses an &lt;em&gt;imperative language&lt;/em&gt; is orthogonal, but it does, however, create the ability to write imperative code in the build.
Note, however, that a dependency was declared for &lt;em&gt;asciidoctor&lt;/em&gt;. This is a major, and probably the most important, difference with Maven: &lt;em&gt;compile&lt;/em&gt; or &lt;em&gt;runtime&lt;/em&gt; doesn&amp;#8217;t make sense here. We declare a dependency for &lt;em&gt;asciidoctor rendering&lt;/em&gt;. There&amp;#8217;s no Java library being built here, it&amp;#8217;s a presentation. Gradle lets you model precisely &lt;em&gt;what you build&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So, in the end, I think what matters is not &lt;em&gt;declarative&lt;/em&gt; vs &lt;em&gt;scripting&lt;/em&gt;. I think what people really want is to reduce the risks of writing bad things. Locking down using XML is &lt;em&gt;one&lt;/em&gt; way to achieve this, but it&amp;#8217;s not the only one. For example, Gradle build scripts &lt;a href=&quot;https://github.com/nebula-plugins/gradle-lint-plugin&quot;&gt;may be linted&lt;/a&gt;. In other words, you can apply on a Gradle build the same tooling you are used to work with when dealing with your own code: checkstyle, findbugs, &amp;#8230; You don&amp;#8217;t &lt;em&gt;have to&lt;/em&gt;, but you can.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The consequence is that yes, there are many different ways you can layout your build with Gradle. This is not different from how you can layout your code in a project: we don&amp;#8217;t tell you in which package you should put your beans, services, &amp;#8230; However, there&amp;#8217;s a big misconception that I&amp;#8217;d like to fight:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;By default, for a Java project, Gradle follows the same conventions as Maven.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s as simple as that. Sources will be in &lt;code&gt;src/main/java&lt;/code&gt;. Tests will be in &lt;code&gt;src/test/java&lt;/code&gt;. Gradle gives you the freedom to diverge from this convention, but this is &lt;em&gt;not&lt;/em&gt; encouraged, and to be honest, I&amp;#8217;ve almost never seen any build diverging from those conventions. On rare occasions, those were actually builds migrated from &lt;em&gt;other&lt;/em&gt; build systems (in particular Ant) where at the time there wasn&amp;#8217;t any convention. Gradle offers the flexibility to reuse an existing layout without much hassle.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_gradle_is_too_flexible&quot;&gt;Gradle is too flexible?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;All in all, the argument that &quot;Gradle is too flexible&quot; is a fallacy.
It&amp;#8217;s all about good engineering practices, putting the right tools in place, and this is nothing different from any engineering work we do everyday.
If you can do it for your code, you can do it for your build.
The interesting thing is &lt;em&gt;why you think you shouldn&amp;#8217;t have the same quality expectation levels for your build as you have for your code&lt;/em&gt;.
Often the answer is just &quot;I don&amp;#8217;t care much about the build, I&amp;#8217;m writing code, this is what I&amp;#8217;m paid for&quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And this is where the discussion becomes interesting, because I think this is a bias that lots of developers have.
They don&amp;#8217;t even realize how much time they are losing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Tell me, how likely is it that you change your build scripts, compared to the number of times you&amp;#8217;re effectively going to run &lt;code&gt;mvn clean install&lt;/code&gt; or &lt;code&gt;gradle test&lt;/code&gt;?
The reality is that you&amp;#8217;re &lt;em&gt;running the build&lt;/em&gt; much more often that you change it.
Therefore, &lt;em&gt;correctness&lt;/em&gt;, incremental builds, incremental compilation, compile avoidance, task output caching, are far more important to developer productivity than the declarativeness aspect.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Sure pure declarativeness is a good thing and this is why I encourage Gradle users to write nice, synthetic build files, but this is &lt;em&gt;not&lt;/em&gt; the most important aspect for &lt;a href=&quot;https://gradle.com/developer-productivity-engineering/&quot;&gt;developer productivity&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;My point is therefore that if you only focus on the &lt;em&gt;surface&lt;/em&gt;, that is to say the language used to express the build (XML vs Groovy/Kotlin), then you&amp;#8217;re missing the most important part to me, which is the underlying Gradle model, far more advanced than what you have in other tools. The Gradle API surfaces this model and has a number of advantages:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A &lt;em&gt;task&lt;/em&gt; can be seen as a &lt;em&gt;function&lt;/em&gt;. It &lt;em&gt;declares&lt;/em&gt; inputs and outputs. For the same inputs, the output are always the same: this provides up-to-date checking and cache-ability.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A task inputs can be another task outputs. This provides &lt;em&gt;implicit dependencies&lt;/em&gt;: Gradle knows that if you want to run &quot;test&quot;, you have to compile first, but it also knows that whatever else is an input to the tests need to be executed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As a consequence, I already wrote about why &lt;a href=&quot;https://melix.github.io/blog/2018/09/gradle-lifecycle.html&quot;&gt;it&amp;#8217;s wrong to think that Gradle doesn&amp;#8217;t have lifecycle tasks&lt;/a&gt;. In fact, Gradle has them, but is also &lt;em&gt;significantly more precise&lt;/em&gt;. The &quot;phase&quot; approach of Maven is way to coarse: it&amp;#8217;s doomed to execute too much, prevents smart parallelism, and leads to dirty workarounds (&lt;code&gt;-x ....&lt;/code&gt; on the CLI to avoid things you know are not necessary).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Similarly, say you want to test your application on different JDKs and have a single build execute tests for all target JVMs, which is different from the JVM which runs the build tool. With a scripting approach like Gradle, this is totally doable. I won&amp;#8217;t say easy because we can definitely do better to make this use case better, but the underlying model makes it quite simple. You don&amp;#8217;t want to &lt;em&gt;rebuild&lt;/em&gt; your application for each target VM. All you want is to &lt;em&gt;test&lt;/em&gt; on different platforms, and therefore the only step should be a different target VM for test execution. Tools like Maven force you into arbitrary things like defining Maven profiles, and force you into rebuilding everything. This is a giant waste of time for something you don&amp;#8217;t need!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In a different topic, this is no surprise that Gradle can build for different ecosystems: Java, Scala, C++, Kotlin, Kotlin Native, Python, &amp;#8230; The underlying infrastructure makes it possible. Even for a single ecosystem, Gradle can declare what the difference between a &lt;a href=&quot;https://docs.gradle.org/6.0-rc-2/userguide/java_library_plugin.html&quot;&gt;Java Library&lt;/a&gt;, a &lt;a href=&quot;https://docs.gradle.org/6.0-rc-2/userguide/java_platform_plugin.html&quot;&gt;Java Platform&lt;/a&gt; or an &lt;a href=&quot;https://docs.gradle.org/6.0-rc-2/userguide/application_plugin.html&quot;&gt;application&lt;/a&gt; is.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I could talk hours about why it&amp;#8217;s important to model properly software, and actually with the release of Gradle 6 we&amp;#8217;ll have a series of blog posts explaining why we think it&amp;#8217;s a game changer in terms of dependency management. If you&amp;#8217;re tired of having to fix the same &quot;multiple slf4j bindings&quot; in each and every project, tired of Guava being upgraded from &lt;code&gt;jre&lt;/code&gt; to &lt;code&gt;android&lt;/code&gt;, frustrated by incompatibilities of Scala 2.11 and 2.12 dependencies, tired of not knowing which of those Maven optional dependencies is important for you to add, you&amp;#8217;ll understand what I mean.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_direct_answer_to_some_tweets&quot;&gt;Direct answer to some tweets&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;ll try to answer more direct questions in this section. Sorry if I missed yours, I got quite a few comments/answers&amp;#8230;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I would sacrifice caches, dependency locks and better plugins to version to have a declarative build process instead of an imperative one. Give me a declarative Gradle and I will love it.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Again, I think this is the wrong tradeoff. Given that you run the build way more often that you change it, declarativeness (that you &lt;em&gt;can&lt;/em&gt; have with Gradle) shouldn&amp;#8217;t be the goal. Your goal should be to reduce your build times, make your build reproducible, improve your developer productivity. Declarativeness is &lt;em&gt;not a goal&lt;/em&gt;, it&amp;#8217;s at best a &lt;em&gt;mean&lt;/em&gt;, but not sufficient by itself. A declarative Gradle, whatever that means, would help you reduce the cognitive overhead, but wouldn&amp;#8217;t help you better model what your application needs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;make a one liner the ability to publish on different repos the snapshot and release artifacts. The way it was done on Gradle 4.x was broken on 5.x and the only way we found to do it is a horrible hack&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here&amp;#8217;s a &lt;a href=&quot;https://gradle.com/blog/dependency-management-with-gradle-part-3-publishing-and-release-strategies/&quot;&gt;webinar about publishing&lt;/a&gt;. Publishing is not complicated with Gradle. It used to be poorly documented, and the old publishing plugins didn&amp;#8217;t help. But publishing to a snapshot repository should be trivial already.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some people will prefer to do their own way, some people will prefer to have a less expressive tool that will produce similar build processes on their projects. Gradle give you the former, Maven the latter. As I say, a matter of taste.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A less expressive tool reduces the risks of writing &lt;em&gt;bad builds&lt;/em&gt;. It doesn&amp;#8217;t help, however, in developing correct, reproducible, fast builds. An, again, I disagree that Gradle leads to &quot;custom builds&quot; everywhere. Most people stick to the defaults and are very happy with them. The more complex builds you find in the wild are those which have indeed very specific needs, or need to be tweaked for performance, producing more artifacts, combinations of artifacts or testing. Things that you can&amp;#8217;t easily do with Maven profiles, for example, because profiles are &lt;em&gt;adhoc&lt;/em&gt; solutions which do not combine well.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Gradle tries to create a fake sense of declarativeness, but it is just an illusion.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It&amp;#8217;s not an illusion. Gradle has a clear separation between its configuration model and execution model. All tasks have declared inputs. The plugins create either new tasks or &lt;em&gt;conventions&lt;/em&gt;. This is not an illusion, this is the reality. Now, because you &lt;em&gt;can&lt;/em&gt; write &lt;code&gt;if&lt;/code&gt; or loops doesn&amp;#8217;t mean it&amp;#8217;s not declarative, it&amp;#8217;s imperative-declarativeness. And yes, you can end up with giant build scripts with &quot;code&quot; inside. If you have, do yourself a favor, &lt;em&gt;refactor&lt;/em&gt; your build like you would with your code, because no one should tolerate this. Use &lt;code&gt;buildSrc&lt;/code&gt;, this is your friend.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I think library dependencies is not correctly supported by IDEs and Java modules are better.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s not correct. We&amp;#8217;ve been using the native Gradle IntelliJ support for years at Gradle, with &lt;em&gt;api&lt;/em&gt; and &lt;em&gt;implementation&lt;/em&gt; separation, and it works exactly like it should. Implementation dependencies are hidden from consumers, like they should. If you don&amp;#8217;t see this, either you didn&amp;#8217;t declare the dependencies or you have a bug in the IDE, in which case it needs to be reported.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Even worst, Gradle don&amp;#8217;t have an official plugin to deal with module-info. there was an old post that says it is not necessay with Gradle because lib dependencies were better (they don&amp;#8217;t)&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I don&amp;#8217;t think anyone said you don&amp;#8217;t need &lt;code&gt;module-info&lt;/code&gt;. There are different things in play:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;separation of API and implementation: Gradle supports this, and it maps to &lt;code&gt;requires&lt;/code&gt; vs &lt;code&gt;requires transitive&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;declaration of public API packages: Gradle &lt;em&gt;used to have&lt;/em&gt; this with the deprecated &quot;software model&quot;. It still has to be backported to the current configuration model. For this, &lt;code&gt;module-info&lt;/code&gt; works fine but it forces you into using the &quot;modular world&quot;, which a lot of libraries, frameworks and IDEs are not ready for.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;declaration of services: Gradle doesn&amp;#8217;t support this.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Can you use modules with Gradle? Yes, there&amp;#8217;s a quite good &lt;a href=&quot;https://github.com/java9-modularity/gradle-modules-plugin&quot;&gt;plugin&lt;/a&gt; to do it. We are planning to support modules and modularity in general better in Gradle, but not short term, because we have bigger pain to solve for our users first. It doesn&amp;#8217;t mean we don&amp;#8217;t consider this important.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I don&amp;#8217;t get why Gradle allow you to explain what your app is better than Maven. In fact I think it is more difficult to explain it on a script that descriptivelly.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I &lt;em&gt;think&lt;/em&gt; the question is what Gradle models better than Maven. A good example here is &lt;code&gt;api&lt;/code&gt; vs &lt;code&gt;implementation&lt;/code&gt; dependencies. Because Maven uses the &lt;em&gt;same descriptor (pom.xml)&lt;/em&gt; for the producer and the consumer, a dependency declared in the &lt;code&gt;&amp;lt;compile&amp;gt;&lt;/code&gt; scope ends up on the compile classpath of the consumers. This is &lt;em&gt;leaking internal implementation details&lt;/em&gt; to consumers, which is very bad because it makes it very hard to evolve libraries, because changing an internal dependency would break consumers which accidentally started depending on your own transitives. This is &lt;em&gt;just&lt;/em&gt; an example of course, there are many other differences (like, why we consider that &lt;code&gt;exclude&lt;/code&gt; is a bad workaround in general, more on this topic in Gradle 6, if you want to read &lt;a href=&quot;https://docs.gradle.org/current/userguide/introduction_dependency_management.html&quot;&gt;our docs&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The builds I’ve seen have been very spaghettish and clearly copy-and-pasted together un-understood recipes from SO.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Yes, there are bad builds out there. With Gradle it&amp;#8217;s frequent for quite old builds from early adopters. More recent builds tend to be much cleaner, because we made a significant effort in guides, getting started samples, documentation. You&amp;#8217;ll always find bad things, and it should be encouraged to fix. On this topic, tools like &lt;a href=&quot;https://scans.gradle.com&quot;&gt;build scans&lt;/a&gt; really help. And copy/pasting from SO is indeed a bad thing. If you copy and paste without understanding what it does, well, bad things can happen&amp;#8230; That said I&amp;#8217;ve seen very scary Maven builds too, and believe me or not, some of our customers wouldn&amp;#8217;t be proud to show you their Maven builds. It&amp;#8217;s the &quot;personal experience fallacy&quot;. I&amp;#8217;ve experienced very clean Gradle builds, you&amp;#8217;ve experienced very bad Gradle builds. I&amp;#8217;ve also written bad Gradle builds, which I dramatically improved, making them more correct, faster, &amp;#8230; Gradle is like any other technology: learn it and you can understand what it brings.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Gradle performance/caching are very attractive but the scripting possibility is a deal breaker. A « declarative-only » Gradle would be perfect for people like me.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Again I think &quot;declarative&quot; is the wrong term here. Locked down to reduce the risks of doing bad things is what you want. It doesn&amp;#8217;t matter if it&amp;#8217;s Kotlin, Groovy, XML or whatever else. It doesn&amp;#8217;t matter if you can use &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;for&lt;/code&gt; loops. What matters is &lt;em&gt;what you can express&lt;/em&gt;, and &lt;em&gt;what should be limited&lt;/em&gt;. It&amp;#8217;s all good engineering that we must share within the industry, find the best patterns, discourage the bad ones. There are quite a few things in the Android world (which uses Gradle) in this direction. We, at Gradle, should do more, but it&amp;#8217;s always a matter of priorities: fixing the most important user pain first. By the way, we provide a Maven build cache with Gradle Enterprise. That is to say, the ability to cache Maven builds using Gradle Enterprise. However, this is limited to &quot;clean builds&quot; (which Maven users are used to do in any case), because of the limitations of the Maven execution model (no knowledge of what each plugin or mojo does, where it writes files, &amp;#8230;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;IMHO the biggest feature of Gradle that Maven doesn&amp;#8217;t have is the ability to change the version of the project&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Well, this is just an accidental example of the interest of having access to the API in a build script. It offers a number of options for the release process, but that&amp;#8217;s not the only one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;My only complain about @gradle is how it is unnecessarily complex to deploy a multi-module project to central. Too much copy &amp;amp; paste, or you need to make an init script, which I still haven&amp;#8217;t managed to do.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Technically the problem is not &quot;how to deploy a multi-module project to Central&quot;, but rather, how do I avoid duplicating configuration between scripts. This is what &lt;code&gt;buildSrc&lt;/code&gt; is for. As soon as you have repetition, then, it means a plugin makes sense. &lt;code&gt;buildSrc&lt;/code&gt; can be seen as &quot;local plugins&quot;, and this is where you should write your common code. Then each project applies a plugin to publish. This is a &lt;em&gt;composition&lt;/em&gt; model, as opposed to the &lt;em&gt;inheritance&lt;/em&gt; model of Maven.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I like all those (caching, incrementality, &amp;#8230;) , in theory, but for my needs they are more complexity than feature&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I don&amp;#8217;t think those are complexity. A task declares its inputs. If you do, you benefit from up-to-date checking, and with a bit more configuration, caching. You don&amp;#8217;t &lt;em&gt;have to&lt;/em&gt;. If you don&amp;#8217;t declare the inputs/outputs, you&amp;#8217;re back to the &quot;Maven&quot; approach where the build tools knows nothing about what a task does, at the difference that Gradle knows that it knows nothing, so can be a bit smarter. As soon as you start declaring your inputs, you benefit from more. It&amp;#8217;s more work, for sure, but it&amp;#8217;s not that complex and the benefit is huge.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Chroniques d&amp;#8217;un introverti en télétravail</title>
      <link>https://melix.github.io/blog/2019/09/introverti-teletravail.html</link>
      <pubDate>Sun, 29 Sep 2019 00:00:00 +0200</pubDate>
      <guid isPermaLink="false">2019/09/introverti-teletravail.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;L&amp;#8217;autre jour j&apos;écoutais le podcast &lt;a href=&quot;https://lescastcodeurs.com/2019/09/16/lcc-216-l-episode-ou-on-a-perdu-le-compte/&quot;&gt;Les Cast Codeurs&lt;/a&gt; qui abordait le sujet du télétravail.
Quelques remarques m&amp;#8217;ont fait tiquer, je m&amp;#8217;en vais donc ici vous raconter mon expérience, mais surtout vous parler de moi et de l&amp;#8217;introversion.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_le_t_l_travail_et_l_introversion&quot;&gt;Le télétravail et l&amp;#8217;introversion&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Voici maintenant presque 10 ans que je suis presque à 100% en télétravail. Je dis presque, parce qu&amp;#8217;en pratique, j&amp;#8217;ai quelques déplacements professionnels (conférences, meetings) de temps en temps, mais pour mon boulot de tous les jours, c&amp;#8217;est tout à la maison.
Avant de faire du télétravail, je roulais beaucoup: mon emploi était sur Nantes, à 45km de chez moi. Ca faisait donc 90km par jour, mais surtout entre 2 et 3h de transport par jour (eh oui, j&amp;#8217;avais la chance de devoir traverser le pont de Cheviré, pour ceux qui connaissent&amp;#8230;).
Bref, le jour où j&amp;#8217;ai changé d&amp;#8217;emploi, pour passer chez VMware pour travailler sur le langage Groovy, le premier choc pour moi ça a été de récupérer ces 2 ou 3 heures par jour.
C&amp;#8217;est autant de temps qu&amp;#8217;on peut passer à s&amp;#8217;occuper de ses enfants (les déposer à l&apos;école, les emmener au sport, &amp;#8230;) ou à faire des activités à la maison (jardinage, sport, &amp;#8230;).
Je ne reviendrais pas sur ces aspects, parce qu&amp;#8217;ils sont largement connus, le seul &quot;inconvénient&quot; pour moi étant surtout d&apos;être capable de maîtriser ses horaires, c&amp;#8217;est à dire de ne pas, contrairement à ce qu&amp;#8217;on pense, faire &lt;em&gt;trop&lt;/em&gt; d&amp;#8217;heures !&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Non, ce sur quoi je veux revenir, c&amp;#8217;est cette remarque d&amp;#8217;Antonio Goncalvés, qui, en conseil, dit en substance:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&quot;Balancez votre cafetière, sortez dans les bars, voyez des gens, c&amp;#8217;est important de voir des êtres humains!&quot;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Et ceci &lt;a href=&quot;https://twitter.com/CedricChampeau/status/1173893698997936130&quot;&gt;m&amp;#8217;a fait réagir&lt;/a&gt;, j&amp;#8217;aimerais donc revenir sur le sujet.
Tout d&amp;#8217;abord, revenons sur le fait que ce conseil ne fonctionne que si vous habitez en ville, ce qui n&amp;#8217;est pas mon cas.
Je suis en campagne, à 5km du bourg, donc faire une &quot;pause café&quot;, ça prend du temps dans ces conditions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Mais revenons surtout sur le fond du sujet: &quot;C&amp;#8217;est important de voir des êtres humains&quot;, ou ce &lt;em&gt;besoin de ne pas être seul&lt;/em&gt;.
C&amp;#8217;est un sujet qui me tient à coeur et qui résonne avec une des questions que j&amp;#8217;ai souvent lorsque je parle du télétravail:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&quot;Mais tu n&amp;#8217;en as pas marre d&apos;être tout seul, de ne voir personne ?&quot;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Alors, répondons franchement: &lt;strong&gt;non&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Autant je comprends les personnes qui en ont besoin, autant, &lt;strong&gt;ne croyez pas que tout le monde fonctionne comme vous&lt;/strong&gt; et a &lt;em&gt;besoin&lt;/em&gt; de voir du monde.
Certaines personnes, comme moi, vivent très bien sans voir personne.
Je peux passer des journées entières seul, sans que celà ne me pose le moindre problème, ni ne me cause le quelconque manque de relations humaines.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Je vais partie de cette catégorie de population qu&amp;#8217;on appelle les &lt;em&gt;introvertis&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Un &lt;em&gt;introverti&lt;/em&gt;, contrairement à une croyance populaire, ça n&amp;#8217;est pas un associal, un égoïste ou quelqu&amp;#8217;un sans empathie.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Un &lt;em&gt;introverti&lt;/em&gt;, c&amp;#8217;est quelqu&amp;#8217;un dont l&apos;énergie sera drainée par la foule, par les relations inter-personnelles, c&amp;#8217;est l&amp;#8217;opposé d&amp;#8217;un &lt;em&gt;extraverti&lt;/em&gt; qui a besoin de monde pour regagner de l&apos;énergie.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Un &lt;em&gt;introverti&lt;/em&gt;, c&amp;#8217;est quelqu&amp;#8217;un qui ne supportera pas les conversations de comptoir, parce qu&amp;#8217;elles ne lui apportent rien d&amp;#8217;autre qu&amp;#8217;une perte d&apos;énergie.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Un &lt;em&gt;introverti&lt;/em&gt;, c&amp;#8217;est quelqu&amp;#8217;un qui pourra vous tenir une conversation passionnée sur un sujet qui l&amp;#8217;intéresse, parce qu&amp;#8217;il en retire quelque chose: l&amp;#8217;interaction en vaut la chandelle.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Déja tout petit, j&apos;évitais les groupes, je n&amp;#8217;avais pas beaucoup d&amp;#8217;amis (mais ceux que j&amp;#8217;avais à l&apos;époque, je les ai toujours).
J&amp;#8217;ai toujours eu une peur bleue de me retrouver dans un groupe où je ne connaissais personne, que ce soit à l&apos;école, au sport, &amp;#8230;
Mais même si je connaissais quelqu&amp;#8217;un, se retrouver &lt;em&gt;dans un groupe&lt;/em&gt;, à devoir cultiver des relations proches, extra &quot;professionnelles&quot;, était d&amp;#8217;une extrême complexité pour moi (et ça l&amp;#8217;est toujours).
Tout ce qui m&amp;#8217;importait à l&apos;époque, c&apos;était d&amp;#8217;apprendre, être &quot;fort&quot; à l&apos;école, ce qui m&amp;#8217;a valu d&apos;être traité &quot;d&amp;#8217;intello&quot;, parfois chahuté, ou d&amp;#8217;avoir des remarques pas particulièrement gentilles d&amp;#8217;autres élèves au dos de ma photo de classe, ceci pendant une grande partie de mon enfance&amp;#8230;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Par exemple, j&amp;#8217;ai toujours refusé les camps de vacances (ma seule expérience, une semaine à faire du cheval, fût tellement une horreur pour moi que je m&amp;#8217;en souviens encore).
J&amp;#8217;ai aussi refusé toutes les classes de neige.
En revanche, j&amp;#8217;avais accepté d&amp;#8217;aller en voyage scolaire en Angleterre, en Irlande, en Espagne, non sans lutter contre moi-même, parce que je savais que je pouvais en tirer quelque chose, mais aussi parce que j&amp;#8217;avais la garantie de me retrouver en petit nombre, avec un copain, dans une chambre&amp;#8230;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Dans la même veine, devoir se retrouver au tableau pour réciter une poésie, ou, pire, chanter, tenait de la torture.
J&amp;#8217;ai adoré la fac&apos; de sciences, parce que je pouvais passer du temps au &quot;café&quot; avec 2/3 potes maximum, à discuter.
J&amp;#8217;ai détesté mon école d&amp;#8217;ingénieur, où j&amp;#8217;ai du rivaliser d&amp;#8217;astuces pour éviter les soirées d&amp;#8217;intégration, tonus et autres dont étaient friants 95% des étudiants: se faire reconnaître sans se faire exclure (mais j&amp;#8217;ai encore trouvé quelques bons amis que je tiens de cette époque).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Aaah, les soirées d&amp;#8217;intégration: ce qui est marrant pour certains, se bourrer la gu&amp;#8230;, humilier &quot;gentilement&quot; les autres, c&apos;était juste pour moi quelque chose d&amp;#8217;horrible.
Tiens, d&amp;#8217;ailleurs, peu le savent, mais j&amp;#8217;ai fait toute ma scolarité à Nantes, non pas parce que tout était disponible là bas (c&apos;était le case), mais parce que j&apos;était terrifié à l&amp;#8217;idée de me retrouver seul dans une FAC, une école d&amp;#8217;ingénieur, à l&amp;#8217;autre bout de la France&amp;#8230;
Certains profs m&amp;#8217;avaient reproché de ne pas tenter une &quot;Grande Ecole&quot;, mais je pense qu&amp;#8217;au final, je m&amp;#8217;en suis plutôt bien sorti !&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_jamais_je_n_embaucherais_quelqu_un_comme_vous&quot;&gt;Jamais je n&amp;#8217;embaucherais quelqu&amp;#8217;un comme vous!&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ceci pourrait vous paraitre surprenant pour quelqu&amp;#8217;un qui, aujourd&amp;#8217;hui, donne des conférences devant, parfois, des centaines de personnes.
Mais alors, quelle est la différence ?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;La différence, c&amp;#8217;est que lorsque je vous parle dans un cadre professionnelle, &lt;strong&gt;je maîtrise mon sujet&lt;/strong&gt; (ou je pense le maîtriser, ah ah !).
Je peux vous parler ouvertement, parce que je sais que les questions qu&amp;#8217;on va me poser seront sur ce sujet.
Il n&amp;#8217;y a que peu de place à l&amp;#8217;inconnu.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;C&amp;#8217;est aussi pour celà qu&amp;#8217;il m&amp;#8217;est très difficile, encore aujourd&amp;#8217;hui, d&amp;#8217;aborder des gens que je ne connais pas.
Je ne sais pas faire de &quot;small talk&quot;, comme on dit.
Mais ça va plus loin: j&amp;#8217;ai fais pas mal de déplacements à l&apos;étranger, aux US par exemple, mais JAMAIS, je ne suis sorti seul pour visiter (au mieux je marcherai une heure ou deux dans les alentours).
On rentre dans cette zone d&amp;#8217;inconnu qui me met tellement mal à l&amp;#8217;aise : devoir s&amp;#8217;adresser à des gens, qui plus est à l&apos;étranger, pour commander un plat, pour demander son chemin: celà me demande trop d&amp;#8217;efforts, me draine trop.
En revanche, si je connais une ou deux personnes et qu&amp;#8217;elle me proposent de les accompagner, ça se passera bien: j&amp;#8217;apprécie fortement une sortie en &quot;petit comité&quot;.
Tout le monde me dit que j&amp;#8217;ai tellement de chance de partir voyager, voir du pays, mais moi, je déteste tellement voyager, en tout cas sans ma famille&amp;#8230;
Rien qu&amp;#8217;aller à Paris, me rendre compte du nombre de personnes qui vivent là bas, me sentir étouffer, qu&amp;#8217;est-ce que j&amp;#8217;ai horreur de ça !&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;La conséquence, c&amp;#8217;est que je fuis comme la peste les &quot;soirées&quot; comme les speaker dinner, les événements d&amp;#8217;entreprise, &amp;#8230;
Souvent, on les présente comme des incontournables du &quot;réseautage&quot;, et c&amp;#8217;est vrai qu&amp;#8217;on y apprend souvent des choses intéressantes, mais elles sont extrêmement stressantes pour moi.
La plupart du temps, j&amp;#8217;essaie de trouver une tête connue et je &quot;m&amp;#8217;accroche&quot;, mais je ne fais jamais long feu.
Ce qui me terrorise s&amp;#8217;est d&amp;#8217;en arriver à des sujets extra-professionnels, là où je n&amp;#8217;ai AUCUNE &quot;compétence&quot;.
Certains diront que je suis chiant, que je n&amp;#8217;ai aucun intérêt, et c&amp;#8217;est probablement vrai si vous recherchez quelqu&amp;#8217;un à la vie extraordinaire, la mienne n&amp;#8217;est pas ultra passionnante :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Si vous en arrivez là, vous devez vous dire que je ne dois pas être un très bon &quot;team player&quot;, comme on dit.
Paradoxalement je ne pense pas que ce soit le cas.
En effet, il ne faut pas confondre mon incapacité à avoir des relations inter-personnelles &quot;simples&quot; avec la capacité d&apos;échange, d&amp;#8217;interaction professionnelle, qui est sur une toute autre dimension.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Comme je vous l&amp;#8217;ai expliqué, je donne régulièrement des talks, et j&amp;#8217;adore plus que tout partager ces connaissances, aider les autres.
J&amp;#8217;aime aussi travailler avec des gens plus compétents que moi pour avoir l&amp;#8217;autre face de la pièce: apprendre, comprendre de nouvelles choses, progresser.
Et dans ce contexte, travailler en équipe aide énormément.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Alors, ce n&amp;#8217;est pas parce qu&amp;#8217;on est en télétravail et qu&amp;#8217;on ne voit personne qu&amp;#8217;on travaille &lt;em&gt;seul&lt;/em&gt;.
Non, on est en équipe. On fait des &quot;daily standup&quot; (via Hangout/Slack), on s&amp;#8217;organise, on fait des petites réunions &quot;face to face&quot; de temps en temps, bref, je pense, mes collègues vous le diront si ça n&amp;#8217;est pas le cas, que ça se passe plutôt bien.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Bref, n&amp;#8217;ayez pas peur de cet aspect: la solitude n&amp;#8217;est pas, pour tout le monde, un problème.
Elle peut, au contraire, aider à la productivité: pas de réunionite inutile, capacité à se focaliser sur un problème des heures durant, &amp;#8230;
Elle n&amp;#8217;est pas, non plus, signe de quelqu&amp;#8217;un qui ne peut pas travailler en équipe: ça n&amp;#8217;empêche en RIEN d&amp;#8217;aider ses collègues, ses clients, bien au contraire: puisqu&amp;#8217;on sait que la relation est professionnelle, elle est focalisée et bien plus efficace.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Pour vous donner une idée, chez Gradle, tout le monde est en télétravail.
Mais pour cet aspect &quot;socialisation&quot;, nous avons une réunion hebdomadaire, facultative, appelée &quot;coffee time&quot; où chacun peut rejoindre la réunion et parler de sujets extra-professionnels.
Certains en ont besoin, pas moi.
Au contraire, j&amp;#8217;aurais du mal à arriver à cette réunion et savoir de quoi parler.
Pire, j&apos;évite au maximum d&amp;#8217;arriver en premier à une réunion de peur de ne pas savoir engager une conversation&amp;#8230;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Mais encore une fois: parlez moi d&amp;#8217;un sujet que je maîtrise, demandez moi d&amp;#8217;expliquer un problème, de chercher une solution, d&amp;#8217;aider quelqu&amp;#8217;un: il n&amp;#8217;y aura aucun problème, parce qu&amp;#8217;il n&amp;#8217;y a aucune place à l&amp;#8217;inconnu.
Il est même fort probable que j&amp;#8217;apprécie énormément une conversation entre nous: si je ne viens pas vous voir, ça n&amp;#8217;est pas que je ne souhaite pas vous parler, c&amp;#8217;est que même si je vous connais, engager une conversation reste quelque chose de très compliqué pour moi. Venez me voir, engagez la conversation et tout se passera bien ! :D&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Alors, ne vous étonnez pas si je vais trois fois le tour du quartier plutôt que de demander mon chemin.
Ne vous étonnez pas si je ne téléphone jamais, ne texte jamais.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Mais si vous faites partie de mes amis, vous avez énormément de chance: c&amp;#8217;est que je tiens beaucoup à vous et vous tiens en haute estime !&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;_n_ayez_pas_honte_d_tre_introvertis_faites_comprendre_ce_que_c_est&quot;&gt;N&amp;#8217;ayez pas honte d&apos;être introvertis, faites comprendre ce que c&amp;#8217;est&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Je terminerais pas une remarque: dans mon &lt;a href=&quot;https://twitter.com/CedricChampeau/status/1173893698997936130&quot;&gt;Tweet original&lt;/a&gt;, je disais que je &quot;me soignais&quot;.
C&amp;#8217;est vrai et c&amp;#8217;est faux à la fois.
Quand je dis que c&amp;#8217;est vrai, c&amp;#8217;est parce que conscient de l&amp;#8217;importance et de la &quot;non reconnaissance&quot; de cette difficulté par les autres, j&amp;#8217;essaie de travailler, notamment la prise de parole.
Je suis, par exemple, secrétaire du club de Karaté, ce qui me force à communiquer avec des gens que je ne connais pas.
Je suis aussi le coach de l&apos;équipe de basket de mon fils de 10 ans, ce que j&amp;#8217;adore faire: c&amp;#8217;est une activité avec son enfant, qui est à la fois publique, mais aussi tellement gratifiante, voir ces enfants heureux de jouer, gagner, &amp;#8230; et ça me permet de travailler sur les relations avec les parents !&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Et surtout, c&amp;#8217;est aussi un message pour mon fils, qui a 10 ans donc mais me ressemble tellement: il a lui aussi beaucoup de mal à parler aux gens, mais je qu&amp;#8217;il travaille dur pour se faire accepter. Lui aussi est si fier lorsqu&amp;#8217;il a la reconnaissance de ses pairs&amp;#8230; Il m&amp;#8217;a fallu des années avant de mettre un nom à ce que je suis, un &lt;em&gt;introverti&lt;/em&gt;, et aujourd&amp;#8217;hui encore, je lutte pour ne plus en avoir &lt;em&gt;honte&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>
    <item>
      <title>Dependency Management at Gradle</title>
      <link>https://melix.github.io/blog/2019/07/dependency-management.html</link>
      <pubDate>Thu, 11 Jul 2019 00:00:00 +0200</pubDate>
      <guid isPermaLink="false">2019/07/dependency-management.html</guid>
      	<description>
	&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;em&gt;Opinions are my own, not those of my employer&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I joined Gradle 4 years ago, and I spent the last 2 years almost exclusively working on &lt;em&gt;dependency management&lt;/em&gt;.
The more I work on this topic, the more I am frustrated by the state of our industry.
In this blog post I will mostly illustrate my points with Java, which I&amp;#8217;m mostly familiar with, but a lot of them stand true whatever the ecosystem (Javascript, Python, Go, &amp;#8230;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Soon, we should release Gradle 6 (fall 2019, no promise, as always, this is software).
This version will be the first one to turn the spotlights on &lt;em&gt;dependency management&lt;/em&gt;.
This will be for me the achievement of 2 hard years of work (not alone, of course) but this is &lt;em&gt;just&lt;/em&gt; the beginning.
Gradle probably has the most advanced dependency engine of the market (forgive me if I&amp;#8217;m wrong, let me know).
But what makes it so different is not that it has powerful features like dependency substitution, customizable resolution, dependency locking, alignment, etc&amp;#8230;
No, what makes it different it&amp;#8217;s that we put a lot of emphasis on &lt;em&gt;semantics&lt;/em&gt;: model software correctly so that you, as a developer, have less to handle.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Often, folks &quot;from the outside&quot; are considering us &lt;em&gt;arrogant&lt;/em&gt;, because we don&amp;#8217;t immediately support things that other engines do (eg. &quot;you don&amp;#8217;t want to implement optional dependencies, look, Maven has it for years you s***&quot;).
While I understand the frustration, it doesn&amp;#8217;t mean that we don&amp;#8217;t hear.
In fact, we hear you loud, but the time it takes to land is just the consequence of willing to implement the correct solution to a problem.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example, what does an &lt;em&gt;optional dependency&lt;/em&gt; mean?
A few months ago, I read this from the Yarn documentation which got me scared, and, to be honest, a bit despaired too:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;/blog/img/optional-deps-yarn.png&quot; alt=&quot;optional deps yarn&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This looks like total non-sense to me.
Because we needed the infrastructure, it took some time but we implemented what we think is a &lt;em&gt;better&lt;/em&gt; solution.
In a nutshell, optional dependencies are &lt;em&gt;not optional&lt;/em&gt;.
They are things that you need &lt;em&gt;if you use a particular feature of a library&lt;/em&gt;.
So it means that if you depend on something, and that this something has &lt;em&gt;optional features&lt;/em&gt;, you can say what features you need and Gradle would give you the correct dependencies for this.
We called that &lt;a href=&quot;https://docs.gradle.org/current/userguide/feature_variants.html&quot;&gt;feature variants&lt;/a&gt;. Granted, the name isn&amp;#8217;t cool, but it&amp;#8217;s a matter of time until we refactor the documentation to make it easier to discover.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Similarly, we implemented back in Gradle 3.4 the separation of API and implementation dependencies for the Java world.
In fact, that&amp;#8217;s one of the reasons the &lt;code&gt;compile&lt;/code&gt; configuration has been &quot;soft deprecated&quot; for years now, and that we&amp;#8217;re going to nag you starting from Gradle 6.
I still hear people claiming they don&amp;#8217;t need this and that it&amp;#8217;s hard to understand but I stand by the fact they &lt;em&gt;deperately&lt;/em&gt; need them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Why is it important? Because if you are a library author, you know that there are things that are &quot;your internal sauce&quot;: things which are implementation details, not part of the public API, and that should never be exposed to consumers.
This is the very reason Java 9 shipped with the module system: strong encapsulation.
However, how does it work for dependencies? There are also dependencies which are &lt;em&gt;part of your API&lt;/em&gt; and others which are not.
Say you use Guave internally. None of the Guava classes are visible on your public API, and it would be an error to do so.
Then it means that Guava &lt;em&gt;is an implementation dependency of your library&lt;/em&gt;.
When you do this, you should be allowed to replace Guava with something else at any time, without breaking any of your consumers.
The horrible reality is that if you use the Maven &lt;code&gt;&amp;lt;compile&amp;gt;&lt;/code&gt; scope, those dependencies are going to &lt;em&gt;leak&lt;/em&gt; to the consumers, and they could accidentally start using Guava just because it&amp;#8217;s available on the classpath (yeah, IDEs love this, the class is available for completion you know!).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is a problem with Maven because the POM file is used for 2 distinct purposes:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;representing the point of view of the producer, where &lt;code&gt;&amp;lt;compile&amp;gt;&lt;/code&gt; means &quot;I need this on my compile classpath&quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;representing the point of view of the consumer, where &lt;code&gt;&amp;lt;compile&amp;gt;&lt;/code&gt; semantics are there broken: it means &quot;add this to your compile classpath&quot;, but it means you leak dependencies which should have been on the &lt;code&gt;&amp;lt;runtime&amp;gt;&lt;/code&gt; scope!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With the Gradle &lt;a href=&quot;https://docs.gradle.org/current/userguide/java_library_plugin.html&quot;&gt;Java Library plugin&lt;/a&gt;, those issues &lt;em&gt;go away&lt;/em&gt;: we model those correctly, and when we generate a POM file, it has dependency declarations which &lt;em&gt;make sense for the consumer&lt;/em&gt;.
I&amp;#8217;ve been battling to explain this in conferences for years, yet, lots of people don&amp;#8217;t get how harmful to the whole ecosystem that design decision from Maven was: it just prevents smooth dependency upgrades, and contributes to the &quot;classpath explosion&quot;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In other words, you, as a developer, should &lt;em&gt;always know what you directly use&lt;/em&gt; (your first level dependencies).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As another example, we&amp;#8217;ve been yelling for years how bad exclusions are, but we did a really bad job at explaining &lt;em&gt;why&lt;/em&gt;.
The problem is also that we didn&amp;#8217;t have all the tools we needed to workaround them, so we said &quot;yeah it&amp;#8217;s bad&quot; but didn&amp;#8217;t really say that you can still use them in some cases.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In a nutshell, an &lt;em&gt;exclusion&lt;/em&gt; is bad because the dependency resolution engine doesn&amp;#8217;t know &lt;em&gt;why&lt;/em&gt; you excluded a dependency:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;is it because the producer had bad metadata, that the dependency should have been &quot;optional&quot;, or just absent altogether?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;is it because you don&amp;#8217;t use a specific &lt;em&gt;code path&lt;/em&gt; of a dependency and you just want to slim down the size of your distribution?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;is it because &lt;em&gt;something breaks&lt;/em&gt; if you use this dependency?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;is it because it&amp;#8217;s yet another logger on the classpath and this is not the one you use?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Well, again, for all those use cases, the solutions are &lt;em&gt;different&lt;/em&gt;.
The logging use case is an illustration of this: how many of you have faced this infamous problem of having multiple SLF4J bindings on the classpath?
How do you fix that with Maven? Exclude of course!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;But wouldn&amp;#8217;t it better if you could express that &quot;between all those logger bindings, this is the one I choose&quot;.
Wouldn&amp;#8217;t it better if, as a &lt;em&gt;producer&lt;/em&gt; of a logger binding, you could say &quot;I implement this logger API, and it doesn&amp;#8217;t make sense to have multiple logger bindings on the classpath at the same time&quot;.
Well, this is what Gradle offers you, as a producer and as a consumer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Modeling software is important, because it makes the industry better &lt;em&gt;as a whole&lt;/em&gt;.
By explaining &lt;em&gt;why&lt;/em&gt; instead of &lt;em&gt;how&lt;/em&gt;, &lt;strong&gt;the dependency management engine can take better decisions&lt;/strong&gt;.
It can fail if things are incompatible, it can ask you to choose between different implementations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Do you need another example? Look at all those &quot;Maven classifiers&quot;. How many times did you got multiple conflicting implementations of the same thing &lt;em&gt;just because they had different classifiers&lt;/em&gt; (looking at you, Guava!).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The reality is that a classifier is a workaround for a bad model, incapable of expressing that you have different &lt;em&gt;things&lt;/em&gt; published at the same coordinates.
Sometimes I read comments like &quot;Gradle is just Maven with a Groovy DSL&quot;.
This is wrong at so many levels: Gradle empathizes on &lt;em&gt;strong modelling&lt;/em&gt; of software.
We need to think in terms of components (&quot;this is a library&quot;, &quot;this is a Boot application&quot;, &quot;this is a Gradle plugin&quot;), not in terms of &lt;em&gt;conventions&lt;/em&gt;.
Models are orthogonal to conventions: conventions are just a tool to make modelling easier to implement, but what matters is the model.
The DSL also doesn&amp;#8217;t matter: Groovy, Kotlin, whatever. What makes Gradle powerful is that it &lt;em&gt;understands what you build&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is one of the reasons we came with &lt;a href=&quot;https://blog.gradle.org/gradle-metadata-1.0&quot;&gt;Gradle Module Metadata&lt;/a&gt;, which is going to be enabled by default in Gradle 6.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We, at Gradle, think that we can save a lot of developer time by simply putting more sense in those things we publish.
It&amp;#8217;s a waste of time and energy that we all have to fix, constantly, those conflicts between libraries.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And can we talk about ethics?
It&amp;#8217;s beyond me we can tolerate, as developers/engineers, repeated approximations, errors, just &lt;em&gt;because Maven does it this way&lt;/em&gt;?
I don&amp;#8217;t really care that we&amp;#8217;re &lt;em&gt;not compatible with Maven&lt;/em&gt;, as long as we &lt;em&gt;solve the problem&lt;/em&gt; and that we move towards well designed, better solutions.
Sometimes we have to make tradeoffs, but we can&amp;#8217;t compromise on reproducibility, correctness and performance.
Of course, we do our best to provide Maven compatibility, and again, sometimes make it even better in some situations (the Java Library plugin).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;My goal is that we, as a whole, move towards a better software delivery world.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The good thing is that what we&amp;#8217;re not alone.
This, is the result of years of experience from the team with very large builds, from customers of small to very large organizations, and discussions with talented open-source developers (special thanks from me to &lt;a href=&quot;https://twitter.com/ankinson&quot;&gt;Andy Wilkinson&lt;/a&gt; from the Spring team).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I posted this earlier this month on Twitter, this is a &lt;em&gt;real&lt;/em&gt; dependency graph, from an organization I have the opportunity to work with:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;/blog/img/real-dependency-graph.png&quot; alt=&quot;real dependency graph&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is not uncommon, this is the reality we live in.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And when you have such a dependency graph, you desperately need more modelling.
Does it mean that Gradle is perfect? Hell, no. We&amp;#8217;re going to make mistakes, we already have and we will continue, but what matters is that we&amp;#8217;re moving towards our goal.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are lots of good things coming in Gradle 6, stay tuned. In the meantime, a lot of what I discussed here has been presented in a couple of webinars:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://gradle.com/blog/dependency-management-fundamentals/&quot;&gt;Dependency Management fundamentals with Gradle&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://gradle.com/blog/dependency-management-part-2-handling-conflicts/&quot;&gt;Handling Conflicts and Customizing Resolution&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Another webinar is planned after summer, around multi-repository development.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hope you&amp;#8217;ll enjoy!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
	</description>
    </item>

  </channel> 
</rss>
